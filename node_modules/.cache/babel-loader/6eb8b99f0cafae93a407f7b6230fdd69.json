{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\HP\\\\PlutospaceMono\\\\src\\\\layouts\\\\authentication\\\\complete-forgotPassword\\\\index.js\",\n    _s = $RefreshSig$();\n\n/**\r\n=========================================================\r\n* Material Dashboard 2 React - v2.0.0\r\n=========================================================\r\n\r\n* Product Page: https://www.creative-tim.com/product/material-dashboard-react\r\n* Copyright 2021 Creative Tim (https://www.creative-tim.com)\r\n\r\nCoded by www.creative-tim.com\r\n\r\n =========================================================\r\n\r\n* The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.\r\n*/\n// @mui material components\nimport { useState } from \"react\";\nimport Card from \"@mui/material/Card\";\nimport { useNavigate } from \"react-router-dom\"; // Material Dashboard 2 React components\n\nimport MDBox from \"components/MDBox\";\nimport MDTypography from \"components/MDTypography\";\nimport MDInput from \"components/MDInput\";\nimport MDButton from \"components/MDButton\";\nimport Swal from \"sweetalert2\";\nimport withReactContent from \"sweetalert2-react-content\";\nimport { Container } from \"react-bootstrap\";\nimport Backdrop from \"@mui/material/Backdrop\";\nimport CircularProgress from \"@mui/material/CircularProgress\"; // Authentication layout components\n\nimport CoverLayout from \"layouts/authentication/components/CoverLayout\"; // Images\n\nimport bgImage from \"assets/images/bg-sign-in-basic.gif\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction ComForgotPass() {\n  _s();\n\n  const navigate = useNavigate();\n  const [passwordShown, setPasswordShown] = useState(false);\n  const [opened, setOpened] = useState(false); // Password toggle handler\n\n  const togglePassword = () => {\n    // When the handler is invoked\n    // inverse the boolean state of passwordShown\n    setPasswordShown(!passwordShown);\n  };\n\n  const [newPasswordx, setNewPassword] = useState(\"\");\n  const [retypeNewPassword, setRetypeNewPassword] = useState(\"\");\n  const MySwal = withReactContent(Swal);\n  const [checkedNPass, setCheckedNPass] = useState(\"\");\n  const [checkedRTNPass, setCheckedRTNPass] = useState(\"\");\n  const [enabled, setEnabled] = useState(\"\");\n\n  const handleOnNPasswordKeys = () => {\n    const passwordValidate = new RegExp(\"^(?=.*[a-z!@#$%^&*.,])(?=.*[A-Z])(?=.*[0-9])(?=.{8,})\");\n\n    if (!retypeNewPassword.match(passwordValidate)) {\n      setCheckedNPass(false); // eslint-disable-next-line no-unused-expressions\n\n      document.getElementById(\"password\").innerHTML = \"Password - Password must be at least 8 characters, must include a capital letter, small letter, a number and any of these symbol (!@#$%^&*.,)<br>\";\n    }\n\n    if (newPasswordx.match(passwordValidate)) {\n      setCheckedNPass(true); // eslint-disable-next-line no-unused-expressions\n\n      document.getElementById(\"password\").innerHTML = \"\";\n    }\n\n    if (newPasswordx.length === 0) {\n      // eslint-disable-next-line no-unused-expressions\n      document.getElementById(\"password\").innerHTML = \"Password is required<br>\";\n    }\n\n    setEnabled(checkedNPass === true && checkedRTNPass === true);\n  };\n\n  const handleOnRTNPasswordKeys = () => {\n    const passwordValidate = new RegExp(\"^(?=.*[a-z!@#$%^&*.,])(?=.*[A-Z])(?=.*[0-9])(?=.{8,})\");\n\n    if (!retypeNewPassword.match(passwordValidate)) {\n      setCheckedRTNPass(false); // eslint-disable-next-line no-unused-expressions\n\n      document.getElementById(\"retypepassword\").innerHTML = \"Retype Password - Password must be at least 8 characters, must include a capital letter, small letter, a number and any of these symbol (!@#$%^&*.,)<br>\";\n    }\n\n    if (retypeNewPassword.match(passwordValidate)) {\n      setCheckedRTNPass(true); // eslint-disable-next-line no-unused-expressions\n\n      document.getElementById(\"retypepassword\").innerHTML = \"\";\n    }\n\n    if (retypeNewPassword !== newPasswordx) {\n      // eslint-disable-next-line no-unused-expressions\n      document.getElementById(\"retypepassword\").innerHTML = \"Passwords don't match<br>\";\n    }\n\n    setEnabled(checkedNPass === true && checkedRTNPass === true);\n  };\n\n  const handleClick = e => {\n    handleOnNPasswordKeys();\n    handleOnRTNPasswordKeys();\n\n    if (enabled) {\n      e.preventDefault();\n      setOpened(true);\n      const queryString = window.location.search;\n      const urlParams = new URLSearchParams(queryString);\n      const email = urlParams.get(\"email\");\n      const emailValue = email;\n      const myHeaders = new Headers();\n      myHeaders.append(\"Content-Type\", \"application/json\");\n      const raw = JSON.stringify({\n        username: emailValue,\n        npassword: newPasswordx\n      });\n      const requestOptions = {\n        method: \"POST\",\n        headers: myHeaders,\n        body: raw,\n        redirect: \"follow\"\n      };\n      fetch(`${process.env.REACT_APP_ZAVE_URL}/login/completeforgotpassword`, requestOptions).then(res => res.json()).then(result => {\n        setOpened(false);\n\n        if (result.status === \"SUCCESS\") {\n          MySwal.fire({\n            title: result.status,\n            type: \"success\",\n            text: result.message\n          }).then(() => {\n            navigate(\"/authentication/sign-in\", {\n              replace: true\n            });\n          });\n        } else {\n          MySwal.fire({\n            title: result.status,\n            type: \"error\",\n            text: result.message\n          });\n        }\n      }).catch(error => {\n        setOpened(false);\n        MySwal.fire({\n          title: error.status,\n          type: \"error\",\n          text: error.message\n        });\n      });\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(CoverLayout, {\n    coverHeight: \"50vh\",\n    image: bgImage,\n    children: [/*#__PURE__*/_jsxDEV(Card, {\n      children: [/*#__PURE__*/_jsxDEV(MDBox, {\n        variant: \"gradient\",\n        bgColor: \"info\",\n        borderRadius: \"lg\",\n        coloredShadow: \"success\",\n        mx: 2,\n        mt: -3,\n        py: 2,\n        mb: 1,\n        textAlign: \"center\",\n        children: /*#__PURE__*/_jsxDEV(MDTypography, {\n          variant: \"h3\",\n          fontWeight: \"medium\",\n          color: \"white\",\n          mt: 1,\n          children: \"Create New Password\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 168,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 157,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(MDBox, {\n        variant: \"gradient\",\n        bgColor: \"error\",\n        borderRadius: \"lg\",\n        coloredShadow: \"success\",\n        mx: 3,\n        mt: 1,\n        p: 1,\n        mb: 1,\n        textAlign: \"center\",\n        children: [/*#__PURE__*/_jsxDEV(MDTypography, {\n          variant: \"gradient\",\n          fontSize: \"60%\",\n          color: \"white\",\n          id: \"password\",\n          children: \" \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 183,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(MDTypography, {\n          variant: \"gradient\",\n          fontSize: \"60%\",\n          color: \"white\",\n          id: \"retypepassword\",\n          children: \" \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 186,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 172,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(MDBox, {\n        pt: 4,\n        pb: 3,\n        px: 3,\n        children: /*#__PURE__*/_jsxDEV(MDBox, {\n          component: \"form\",\n          role: \"form\",\n          children: [/*#__PURE__*/_jsxDEV(MDBox, {\n            mb: 4,\n            children: /*#__PURE__*/_jsxDEV(Container, {\n              children: /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"row\",\n                children: /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"col-sm-12\",\n                  children: /*#__PURE__*/_jsxDEV(MDInput, {\n                    type: passwordShown ? \"text\" : \"password\",\n                    label: \"Password\",\n                    value: newPasswordx || \"\",\n                    onKeyUp: handleOnNPasswordKeys,\n                    onChange: e => setNewPassword(e.target.value),\n                    variant: \"standard\",\n                    fullWidth: true\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 196,\n                    columnNumber: 21\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 195,\n                  columnNumber: 19\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 194,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 193,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 192,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(MDBox, {\n            mb: 4,\n            children: /*#__PURE__*/_jsxDEV(Container, {\n              children: /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"row\",\n                children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"col-sm-12\",\n                  children: /*#__PURE__*/_jsxDEV(MDInput, {\n                    type: passwordShown ? \"text\" : \"password\",\n                    label: \"Re-Type Password\",\n                    value: retypeNewPassword || \"\",\n                    onKeyUp: handleOnRTNPasswordKeys,\n                    onChange: e => setRetypeNewPassword(e.target.value),\n                    variant: \"standard\",\n                    fullWidth: true\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 213,\n                    columnNumber: 21\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 212,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(MDTypography, {\n                  variant: \"button\",\n                  fontSize: \"60%\",\n                  align: \"right\",\n                  onClick: togglePassword,\n                  mx: 0,\n                  color: \"info\",\n                  children: \"show password\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 223,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 211,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 210,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 209,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(MDBox, {\n            mt: 6,\n            mb: 1,\n            children: /*#__PURE__*/_jsxDEV(MDButton, {\n              variant: \"gradient\",\n              color: \"info\",\n              onClick: handleClick,\n              fullWidth: true,\n              children: \"Save\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 237,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 236,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 191,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 190,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 156,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Backdrop, {\n      sx: {\n        color: \"#fff\",\n        zIndex: theme => theme.zIndex.drawer + 1\n      },\n      open: opened,\n      children: /*#__PURE__*/_jsxDEV(CircularProgress, {\n        color: \"info\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 245,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 244,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 155,\n    columnNumber: 5\n  }, this);\n}\n\n_s(ComForgotPass, \"Pg4fMZ9RQXWzyIDYTuiIOsZepe4=\", false, function () {\n  return [useNavigate];\n});\n\n_c = ComForgotPass;\nexport default ComForgotPass;\n\nvar _c;\n\n$RefreshReg$(_c, \"ComForgotPass\");","map":{"version":3,"names":["useState","Card","useNavigate","MDBox","MDTypography","MDInput","MDButton","Swal","withReactContent","Container","Backdrop","CircularProgress","CoverLayout","bgImage","ComForgotPass","navigate","passwordShown","setPasswordShown","opened","setOpened","togglePassword","newPasswordx","setNewPassword","retypeNewPassword","setRetypeNewPassword","MySwal","checkedNPass","setCheckedNPass","checkedRTNPass","setCheckedRTNPass","enabled","setEnabled","handleOnNPasswordKeys","passwordValidate","RegExp","match","document","getElementById","innerHTML","length","handleOnRTNPasswordKeys","handleClick","e","preventDefault","queryString","window","location","search","urlParams","URLSearchParams","email","get","emailValue","myHeaders","Headers","append","raw","JSON","stringify","username","npassword","requestOptions","method","headers","body","redirect","fetch","process","env","REACT_APP_ZAVE_URL","then","res","json","result","status","fire","title","type","text","message","replace","catch","error","target","value","color","zIndex","theme","drawer"],"sources":["C:/Users/HP/PlutospaceMono/src/layouts/authentication/complete-forgotPassword/index.js"],"sourcesContent":["/**\r\n=========================================================\r\n* Material Dashboard 2 React - v2.0.0\r\n=========================================================\r\n\r\n* Product Page: https://www.creative-tim.com/product/material-dashboard-react\r\n* Copyright 2021 Creative Tim (https://www.creative-tim.com)\r\n\r\nCoded by www.creative-tim.com\r\n\r\n =========================================================\r\n\r\n* The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.\r\n*/\r\n\r\n// @mui material components\r\nimport { useState } from \"react\";\r\nimport Card from \"@mui/material/Card\";\r\nimport { useNavigate } from \"react-router-dom\";\r\n\r\n// Material Dashboard 2 React components\r\nimport MDBox from \"components/MDBox\";\r\nimport MDTypography from \"components/MDTypography\";\r\nimport MDInput from \"components/MDInput\";\r\nimport MDButton from \"components/MDButton\";\r\nimport Swal from \"sweetalert2\";\r\nimport withReactContent from \"sweetalert2-react-content\";\r\nimport { Container } from \"react-bootstrap\";\r\nimport Backdrop from \"@mui/material/Backdrop\";\r\nimport CircularProgress from \"@mui/material/CircularProgress\";\r\n\r\n// Authentication layout components\r\nimport CoverLayout from \"layouts/authentication/components/CoverLayout\";\r\n\r\n// Images\r\nimport bgImage from \"assets/images/bg-sign-in-basic.gif\";\r\n\r\nfunction ComForgotPass() {\r\n  const navigate = useNavigate();\r\n\r\n  const [passwordShown, setPasswordShown] = useState(false);\r\n\r\n  const [opened, setOpened] = useState(false);\r\n  // Password toggle handler\r\n  const togglePassword = () => {\r\n    // When the handler is invoked\r\n    // inverse the boolean state of passwordShown\r\n    setPasswordShown(!passwordShown);\r\n  };\r\n\r\n  const [newPasswordx, setNewPassword] = useState(\"\");\r\n  const [retypeNewPassword, setRetypeNewPassword] = useState(\"\");\r\n  const MySwal = withReactContent(Swal);\r\n\r\n  const [checkedNPass, setCheckedNPass] = useState(\"\");\r\n  const [checkedRTNPass, setCheckedRTNPass] = useState(\"\");\r\n  const [enabled, setEnabled] = useState(\"\");\r\n\r\n  const handleOnNPasswordKeys = () => {\r\n    const passwordValidate = new RegExp(\"^(?=.*[a-z!@#$%^&*.,])(?=.*[A-Z])(?=.*[0-9])(?=.{8,})\");\r\n    if (!retypeNewPassword.match(passwordValidate)) {\r\n      setCheckedNPass(false);\r\n      // eslint-disable-next-line no-unused-expressions\r\n      document.getElementById(\"password\").innerHTML =\r\n        \"Password - Password must be at least 8 characters, must include a capital letter, small letter, a number and any of these symbol (!@#$%^&*.,)<br>\";\r\n    }\r\n    if (newPasswordx.match(passwordValidate)) {\r\n      setCheckedNPass(true);\r\n      // eslint-disable-next-line no-unused-expressions\r\n      document.getElementById(\"password\").innerHTML = \"\";\r\n    }\r\n    if (newPasswordx.length === 0) {\r\n      // eslint-disable-next-line no-unused-expressions\r\n      document.getElementById(\"password\").innerHTML = \"Password is required<br>\";\r\n    }\r\n    setEnabled(checkedNPass === true && checkedRTNPass === true);\r\n  };\r\n\r\n  const handleOnRTNPasswordKeys = () => {\r\n    const passwordValidate = new RegExp(\"^(?=.*[a-z!@#$%^&*.,])(?=.*[A-Z])(?=.*[0-9])(?=.{8,})\");\r\n    if (!retypeNewPassword.match(passwordValidate)) {\r\n      setCheckedRTNPass(false);\r\n      // eslint-disable-next-line no-unused-expressions\r\n      document.getElementById(\"retypepassword\").innerHTML =\r\n        \"Retype Password - Password must be at least 8 characters, must include a capital letter, small letter, a number and any of these symbol (!@#$%^&*.,)<br>\";\r\n    }\r\n    if (retypeNewPassword.match(passwordValidate)) {\r\n      setCheckedRTNPass(true);\r\n      // eslint-disable-next-line no-unused-expressions\r\n      document.getElementById(\"retypepassword\").innerHTML = \"\";\r\n    }\r\n    if (retypeNewPassword !== newPasswordx) {\r\n      // eslint-disable-next-line no-unused-expressions\r\n      document.getElementById(\"retypepassword\").innerHTML = \"Passwords don't match<br>\";\r\n    }\r\n    setEnabled(checkedNPass === true && checkedRTNPass === true);\r\n  };\r\n\r\n  const handleClick = (e) => {\r\n    handleOnNPasswordKeys();\r\n    handleOnRTNPasswordKeys();\r\n    if (enabled) {\r\n      e.preventDefault();\r\n      setOpened(true);\r\n      const queryString = window.location.search;\r\n      const urlParams = new URLSearchParams(queryString);\r\n      const email = urlParams.get(\"email\");\r\n      const emailValue = email;\r\n\r\n      const myHeaders = new Headers();\r\n      myHeaders.append(\"Content-Type\", \"application/json\");\r\n      const raw = JSON.stringify({\r\n        username: emailValue,\r\n        npassword: newPasswordx,\r\n      });\r\n      const requestOptions = {\r\n        method: \"POST\",\r\n        headers: myHeaders,\r\n        body: raw,\r\n        redirect: \"follow\",\r\n      };\r\n\r\n      fetch(`${process.env.REACT_APP_ZAVE_URL}/login/completeforgotpassword`, requestOptions)\r\n        .then((res) => res.json())\r\n        .then((result) => {\r\n          setOpened(false);\r\n          if (result.status === \"SUCCESS\") {\r\n            MySwal.fire({\r\n              title: result.status,\r\n              type: \"success\",\r\n              text: result.message,\r\n            }).then(() => {\r\n              navigate(\"/authentication/sign-in\", { replace: true });\r\n            });\r\n          } else {\r\n            MySwal.fire({\r\n              title: result.status,\r\n              type: \"error\",\r\n              text: result.message,\r\n            });\r\n          }\r\n        })\r\n        .catch((error) => {\r\n          setOpened(false);\r\n          MySwal.fire({\r\n            title: error.status,\r\n            type: \"error\",\r\n            text: error.message,\r\n          });\r\n        });\r\n    }\r\n  };\r\n\r\n  return (\r\n    <CoverLayout coverHeight=\"50vh\" image={bgImage}>\r\n      <Card>\r\n        <MDBox\r\n          variant=\"gradient\"\r\n          bgColor=\"info\"\r\n          borderRadius=\"lg\"\r\n          coloredShadow=\"success\"\r\n          mx={2}\r\n          mt={-3}\r\n          py={2}\r\n          mb={1}\r\n          textAlign=\"center\"\r\n        >\r\n          <MDTypography variant=\"h3\" fontWeight=\"medium\" color=\"white\" mt={1}>\r\n            Create New Password\r\n          </MDTypography>\r\n        </MDBox>\r\n        <MDBox\r\n          variant=\"gradient\"\r\n          bgColor=\"error\"\r\n          borderRadius=\"lg\"\r\n          coloredShadow=\"success\"\r\n          mx={3}\r\n          mt={1}\r\n          p={1}\r\n          mb={1}\r\n          textAlign=\"center\"\r\n        >\r\n          <MDTypography variant=\"gradient\" fontSize=\"60%\" color=\"white\" id=\"password\">\r\n            {\" \"}\r\n          </MDTypography>\r\n          <MDTypography variant=\"gradient\" fontSize=\"60%\" color=\"white\" id=\"retypepassword\">\r\n            {\" \"}\r\n          </MDTypography>\r\n        </MDBox>\r\n        <MDBox pt={4} pb={3} px={3}>\r\n          <MDBox component=\"form\" role=\"form\">\r\n            <MDBox mb={4}>\r\n              <Container>\r\n                <div className=\"row\">\r\n                  <div className=\"col-sm-12\">\r\n                    <MDInput\r\n                      type={passwordShown ? \"text\" : \"password\"}\r\n                      label=\"Password\"\r\n                      value={newPasswordx || \"\"}\r\n                      onKeyUp={handleOnNPasswordKeys}\r\n                      onChange={(e) => setNewPassword(e.target.value)}\r\n                      variant=\"standard\"\r\n                      fullWidth\r\n                    />\r\n                  </div>\r\n                </div>\r\n              </Container>\r\n            </MDBox>\r\n            <MDBox mb={4}>\r\n              <Container>\r\n                <div className=\"row\">\r\n                  <div className=\"col-sm-12\">\r\n                    <MDInput\r\n                      type={passwordShown ? \"text\" : \"password\"}\r\n                      label=\"Re-Type Password\"\r\n                      value={retypeNewPassword || \"\"}\r\n                      onKeyUp={handleOnRTNPasswordKeys}\r\n                      onChange={(e) => setRetypeNewPassword(e.target.value)}\r\n                      variant=\"standard\"\r\n                      fullWidth\r\n                    />\r\n                  </div>\r\n                  <MDTypography\r\n                    variant=\"button\"\r\n                    fontSize=\"60%\"\r\n                    align=\"right\"\r\n                    onClick={togglePassword}\r\n                    mx={0}\r\n                    color=\"info\"\r\n                  >\r\n                    show password\r\n                  </MDTypography>\r\n                </div>\r\n              </Container>\r\n            </MDBox>\r\n            <MDBox mt={6} mb={1}>\r\n              <MDButton variant=\"gradient\" color=\"info\" onClick={handleClick} fullWidth>\r\n                Save\r\n              </MDButton>\r\n            </MDBox>\r\n          </MDBox>\r\n        </MDBox>\r\n      </Card>\r\n      <Backdrop sx={{ color: \"#fff\", zIndex: (theme) => theme.zIndex.drawer + 1 }} open={opened}>\r\n        <CircularProgress color=\"info\" />\r\n      </Backdrop>\r\n    </CoverLayout>\r\n  );\r\n}\r\n\r\nexport default ComForgotPass;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}