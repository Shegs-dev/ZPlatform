{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\HP\\\\PlutospaceMono\\\\src\\\\layouts\\\\authentication\\\\changepassword\\\\index.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport MDBox from \"components/MDBox\";\nimport MDInput from \"components/MDInput\";\nimport MDButton from \"components/MDButton\";\nimport Card from \"@mui/material/Card\";\nimport { Container } from \"react-bootstrap\";\nimport Backdrop from \"@mui/material/Backdrop\";\nimport CircularProgress from \"@mui/material/CircularProgress\";\nimport DashboardLayout from \"examples/LayoutContainers/DashboardLayout\";\nimport DashboardNavbar from \"examples/Navbars/DashboardNavbar\";\nimport Swal from \"sweetalert2\";\nimport withReactContent from \"sweetalert2-react-content\";\nimport Footer from \"examples/Footer\";\nimport MDTypography from \"components/MDTypography\";\nimport PHeaders from \"postHeader\";\nimport { useNavigate } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction ChangePassword() {\n  _s();\n\n  const MySwal = withReactContent(Swal);\n  const [passwordx, setpassword] = useState(\"\");\n  const [npasswordx, setnpassword] = useState(\"\");\n  const [retypepasswordx, setretypepassword] = useState(\"\");\n  const [checkedNPass, setCheckedNPass] = useState(\"\");\n  const [checkedRTNPass, setCheckedRTNPass] = useState(\"\");\n  const [enabled, setEnabled] = useState(\"\");\n  const [passwordShown, setPasswordShown] = useState(false);\n  const [opened, setOpened] = useState(false); // Password toggle handler\n\n  const togglePassword = () => {\n    // When the handler is invoked\n    // inverse the boolean state of passwordShown\n    setPasswordShown(!passwordShown);\n  };\n\n  const navigate = useNavigate();\n  const {\n    allPHeaders: myHeaders\n  } = PHeaders();\n\n  const handleOnPasswordKeys = () => {\n    if (passwordx.length === 0) {\n      setCheckedNPass(false); // eslint-disable-next-line no-unused-expressions\n\n      document.getElementById(\"password\").innerHTML = \"Old Password is required<br>\";\n    } else {\n      setCheckedNPass(true); // eslint-disable-next-line no-unused-expressions\n\n      document.getElementById(\"password\").innerHTML = \"\";\n    }\n\n    setEnabled(checkedNPass === true && checkedRTNPass === true);\n  };\n\n  const handleOnNPasswordKeys = () => {\n    const passwordValidate = new RegExp(\"^(?=.*[a-z])(?=.*[A-Z])(?=.*[0-9])(?=.*[!@#$%^&*.,])(?=.{8,})\");\n\n    if (!npasswordx.match(passwordValidate)) {\n      setCheckedNPass(false); // eslint-disable-next-line no-unused-expressions\n\n      document.getElementById(\"npassword\").innerHTML = \"New Password - Password must be at least 8 characters, must include a capital letter, small letter, a number and any of these symbol (!@#$%^&*.,)<br>\";\n    }\n\n    if (npasswordx.match(passwordValidate)) {\n      setCheckedNPass(true); // eslint-disable-next-line no-unused-expressions\n\n      document.getElementById(\"npassword\").innerHTML = \"\";\n    }\n\n    if (npasswordx !== 0) {\n      if (retypepasswordx !== npasswordx) {\n        setCheckedRTNPass(false); // eslint-disable-next-line no-unused-expressions\n\n        document.getElementById(\"retypepassword\").innerHTML = \"Passwords don't match<br>\";\n      }\n    }\n\n    if (npasswordx.length === 0) {\n      // eslint-disable-next-line no-unused-expressions\n      document.getElementById(\"npassword\").innerHTML = \"New Password is required<br>\";\n    }\n\n    setEnabled(checkedNPass === true && checkedRTNPass === true);\n  };\n\n  const handleOnRTNPasswordKeys = () => {\n    const ruby = \"represrestyu\";\n    const rubi = \"represrestyu\";\n\n    if (ruby === rubi) {\n      console.log(\"true\");\n    }\n\n    const passwordValidate = new RegExp(\"^(?=.*[a-z])(?=.*[A-Z])(?=.*[0-9])(?=.*[!@#$%^&*.,])(?=.{8,})\");\n\n    if (retypepasswordx !== npasswordx) {\n      setCheckedRTNPass(false); // eslint-disable-next-line no-unused-expressions\n\n      document.getElementById(\"retypepassword\").innerHTML = \"Passwords don't match<br>\";\n    }\n\n    if (retypepasswordx.match(passwordValidate)) {\n      setCheckedRTNPass(true); // eslint-disable-next-line no-unused-expressions\n\n      document.getElementById(\"retypepassword\").innerHTML = \"\";\n    }\n\n    setEnabled(checkedNPass === true && checkedRTNPass === true);\n  };\n\n  const handleClick = e => {\n    handleOnNPasswordKeys();\n    handleOnPasswordKeys();\n    handleOnRTNPasswordKeys();\n\n    if (enabled) {\n      setOpened(true);\n      e.preventDefault();\n      const data11 = JSON.parse(localStorage.getItem(\"user1\"));\n      const emailCh = data11.email;\n      const raw = JSON.stringify({\n        username: emailCh,\n        password: passwordx,\n        npassword: npasswordx\n      });\n      const requestOptions = {\n        method: \"POST\",\n        headers: myHeaders,\n        body: raw,\n        redirect: \"follow\"\n      };\n      fetch(`${process.env.REACT_APP_ZAVE_URL}/individualLogin/changepass`, requestOptions).then(async res => {\n        const aToken = res.headers.get(\"token-1\");\n        localStorage.setItem(\"rexxdex\", aToken);\n        return res.json();\n      }).then(result => {\n        setOpened(false);\n\n        if (result.message === \"Expired Access\") {\n          navigate(\"/authentication/sign-in\");\n          window.location.reload();\n        }\n\n        if (result.message === \"Token Does Not Exist\") {\n          navigate(\"/authentication/sign-in\");\n          window.location.reload();\n        }\n\n        if (result.message === \"Unauthorized Access\") {\n          navigate(\"/authentication/forbiddenPage\");\n          window.location.reload();\n        }\n\n        MySwal.fire({\n          title: result.status,\n          type: \"success\",\n          text: result.message\n        }).then(() => {\n          if (result.status === \"SUCCESS\") {\n            window.location.reload();\n          }\n        });\n      }).catch(error => {\n        setOpened(false);\n        MySwal.fire({\n          title: error.status,\n          type: \"error\",\n          text: error.message\n        });\n      });\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(DashboardLayout, {\n    children: [/*#__PURE__*/_jsxDEV(DashboardNavbar, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 165,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Card, {\n      children: /*#__PURE__*/_jsxDEV(MDBox, {\n        pt: 3.5,\n        pb: 3.5,\n        px: 30,\n        children: [/*#__PURE__*/_jsxDEV(MDBox, {\n          variant: \"gradient\",\n          bgColor: \"info\",\n          borderRadius: \"lg\",\n          coloredShadow: \"info\",\n          mx: 2,\n          mt: -3,\n          p: 2,\n          mb: 1,\n          textAlign: \"center\",\n          children: /*#__PURE__*/_jsxDEV(MDTypography, {\n            variant: \"h4\",\n            fontWeight: \"medium\",\n            color: \"white\",\n            mt: 1,\n            children: \"CHANGE PASSWORD\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 179,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 168,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(MDBox, {\n          variant: \"gradient\",\n          bgColor: \"error\",\n          borderRadius: \"lg\",\n          coloredShadow: \"success\",\n          mx: 3,\n          mt: 1,\n          p: 1,\n          mb: 1,\n          textAlign: \"center\",\n          children: [/*#__PURE__*/_jsxDEV(MDTypography, {\n            variant: \"gradient\",\n            fontSize: \"60%\",\n            color: \"white\",\n            id: \"password\",\n            children: \" \"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 194,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(MDTypography, {\n            variant: \"gradient\",\n            fontSize: \"60%\",\n            color: \"white\",\n            id: \"npassword\",\n            children: \" \"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 197,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(MDTypography, {\n            variant: \"gradient\",\n            fontSize: \"60%\",\n            color: \"white\",\n            id: \"retypepassword\",\n            children: \" \"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 200,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 183,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(MDBox, {\n          component: \"form\",\n          role: \"form\",\n          children: [/*#__PURE__*/_jsxDEV(MDBox, {\n            mb: 2,\n            children: /*#__PURE__*/_jsxDEV(Container, {\n              children: /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"row\",\n                children: /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"col-sm-12\",\n                  children: /*#__PURE__*/_jsxDEV(MDInput, {\n                    type: passwordShown ? \"text\" : \"password\",\n                    label: \"Old Password\",\n                    value: passwordx || \"\",\n                    onKeyUp: handleOnPasswordKeys,\n                    onChange: e => setpassword(e.target.value),\n                    variant: \"standard\",\n                    fullWidth: true\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 209,\n                    columnNumber: 21\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 208,\n                  columnNumber: 19\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 207,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 206,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 205,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(MDBox, {\n            mb: 2,\n            children: /*#__PURE__*/_jsxDEV(Container, {\n              children: /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"row\",\n                children: /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"col-sm-12\",\n                  children: /*#__PURE__*/_jsxDEV(MDInput, {\n                    type: passwordShown ? \"text\" : \"password\",\n                    value: npasswordx || \"\",\n                    onKeyUp: handleOnNPasswordKeys,\n                    onChange: e => setnpassword(e.target.value),\n                    label: \"New Password\",\n                    variant: \"standard\",\n                    fullWidth: true\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 226,\n                    columnNumber: 21\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 225,\n                  columnNumber: 19\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 224,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 223,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 222,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(MDBox, {\n            mb: 2,\n            children: /*#__PURE__*/_jsxDEV(Container, {\n              children: /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"row\",\n                children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"col-sm-12\",\n                  children: /*#__PURE__*/_jsxDEV(MDInput, {\n                    type: passwordShown ? \"text\" : \"password\",\n                    value: retypepasswordx || \"\",\n                    onKeyUp: handleOnRTNPasswordKeys,\n                    onChange: e => setretypepassword(e.target.value),\n                    label: \"Retype Password\",\n                    variant: \"standard\",\n                    fullWidth: true\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 243,\n                    columnNumber: 21\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 242,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(MDTypography, {\n                  variant: \"button\",\n                  fontSize: \"60%\",\n                  align: \"right\",\n                  onClick: togglePassword,\n                  mx: 0,\n                  color: \"info\",\n                  children: \"show password\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 253,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 241,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 240,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 239,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(MDBox, {\n            mt: 4,\n            mb: 1,\n            children: /*#__PURE__*/_jsxDEV(MDButton, {\n              variant: \"gradient\",\n              onClick: handleClick,\n              color: \"info\",\n              width: \"40%\",\n              children: \"Save\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 267,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 266,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 204,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 167,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 166,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Footer, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 274,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Backdrop, {\n      sx: {\n        color: \"#fff\",\n        zIndex: theme => theme.zIndex.drawer + 1\n      },\n      open: opened,\n      children: /*#__PURE__*/_jsxDEV(CircularProgress, {\n        color: \"info\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 276,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 275,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 164,\n    columnNumber: 5\n  }, this);\n}\n\n_s(ChangePassword, \"XuHMpEEy8OPjVUrTTAmW96VAx9M=\", false, function () {\n  return [useNavigate];\n});\n\n_c = ChangePassword;\nexport default ChangePassword;\n\nvar _c;\n\n$RefreshReg$(_c, \"ChangePassword\");","map":{"version":3,"names":["React","useState","MDBox","MDInput","MDButton","Card","Container","Backdrop","CircularProgress","DashboardLayout","DashboardNavbar","Swal","withReactContent","Footer","MDTypography","PHeaders","useNavigate","ChangePassword","MySwal","passwordx","setpassword","npasswordx","setnpassword","retypepasswordx","setretypepassword","checkedNPass","setCheckedNPass","checkedRTNPass","setCheckedRTNPass","enabled","setEnabled","passwordShown","setPasswordShown","opened","setOpened","togglePassword","navigate","allPHeaders","myHeaders","handleOnPasswordKeys","length","document","getElementById","innerHTML","handleOnNPasswordKeys","passwordValidate","RegExp","match","handleOnRTNPasswordKeys","ruby","rubi","console","log","handleClick","e","preventDefault","data11","JSON","parse","localStorage","getItem","emailCh","email","raw","stringify","username","password","npassword","requestOptions","method","headers","body","redirect","fetch","process","env","REACT_APP_ZAVE_URL","then","res","aToken","get","setItem","json","result","message","window","location","reload","fire","title","status","type","text","catch","error","target","value","color","zIndex","theme","drawer"],"sources":["C:/Users/HP/PlutospaceMono/src/layouts/authentication/changepassword/index.js"],"sourcesContent":["import React, { useState } from \"react\";\r\nimport MDBox from \"components/MDBox\";\r\nimport MDInput from \"components/MDInput\";\r\nimport MDButton from \"components/MDButton\";\r\nimport Card from \"@mui/material/Card\";\r\nimport { Container } from \"react-bootstrap\";\r\nimport Backdrop from \"@mui/material/Backdrop\";\r\nimport CircularProgress from \"@mui/material/CircularProgress\";\r\n\r\nimport DashboardLayout from \"examples/LayoutContainers/DashboardLayout\";\r\nimport DashboardNavbar from \"examples/Navbars/DashboardNavbar\";\r\nimport Swal from \"sweetalert2\";\r\nimport withReactContent from \"sweetalert2-react-content\";\r\nimport Footer from \"examples/Footer\";\r\nimport MDTypography from \"components/MDTypography\";\r\nimport PHeaders from \"postHeader\";\r\nimport { useNavigate } from \"react-router-dom\";\r\n\r\nfunction ChangePassword() {\r\n  const MySwal = withReactContent(Swal);\r\n  const [passwordx, setpassword] = useState(\"\");\r\n  const [npasswordx, setnpassword] = useState(\"\");\r\n  const [retypepasswordx, setretypepassword] = useState(\"\");\r\n  const [checkedNPass, setCheckedNPass] = useState(\"\");\r\n  const [checkedRTNPass, setCheckedRTNPass] = useState(\"\");\r\n  const [enabled, setEnabled] = useState(\"\");\r\n  const [passwordShown, setPasswordShown] = useState(false);\r\n\r\n  const [opened, setOpened] = useState(false);\r\n\r\n  // Password toggle handler\r\n  const togglePassword = () => {\r\n    // When the handler is invoked\r\n    // inverse the boolean state of passwordShown\r\n    setPasswordShown(!passwordShown);\r\n  };\r\n\r\n  const navigate = useNavigate();\r\n\r\n  const { allPHeaders: myHeaders } = PHeaders();\r\n\r\n  const handleOnPasswordKeys = () => {\r\n    if (passwordx.length === 0) {\r\n      setCheckedNPass(false);\r\n      // eslint-disable-next-line no-unused-expressions\r\n      document.getElementById(\"password\").innerHTML = \"Old Password is required<br>\";\r\n    } else {\r\n      setCheckedNPass(true);\r\n      // eslint-disable-next-line no-unused-expressions\r\n      document.getElementById(\"password\").innerHTML = \"\";\r\n    }\r\n    setEnabled(checkedNPass === true && checkedRTNPass === true);\r\n  };\r\n\r\n  const handleOnNPasswordKeys = () => {\r\n    const passwordValidate = new RegExp(\r\n      \"^(?=.*[a-z])(?=.*[A-Z])(?=.*[0-9])(?=.*[!@#$%^&*.,])(?=.{8,})\"\r\n    );\r\n    if (!npasswordx.match(passwordValidate)) {\r\n      setCheckedNPass(false);\r\n      // eslint-disable-next-line no-unused-expressions\r\n      document.getElementById(\"npassword\").innerHTML =\r\n        \"New Password - Password must be at least 8 characters, must include a capital letter, small letter, a number and any of these symbol (!@#$%^&*.,)<br>\";\r\n    }\r\n    if (npasswordx.match(passwordValidate)) {\r\n      setCheckedNPass(true);\r\n      // eslint-disable-next-line no-unused-expressions\r\n      document.getElementById(\"npassword\").innerHTML = \"\";\r\n    }\r\n    if (npasswordx !== 0) {\r\n      if (retypepasswordx !== npasswordx) {\r\n        setCheckedRTNPass(false);\r\n        // eslint-disable-next-line no-unused-expressions\r\n        document.getElementById(\"retypepassword\").innerHTML = \"Passwords don't match<br>\";\r\n      }\r\n    }\r\n    if (npasswordx.length === 0) {\r\n      // eslint-disable-next-line no-unused-expressions\r\n      document.getElementById(\"npassword\").innerHTML = \"New Password is required<br>\";\r\n    }\r\n    setEnabled(checkedNPass === true && checkedRTNPass === true);\r\n  };\r\n\r\n  const handleOnRTNPasswordKeys = () => {\r\n    const ruby = \"represrestyu\";\r\n    const rubi = \"represrestyu\";\r\n    if (ruby === rubi) {\r\n      console.log(\"true\");\r\n    }\r\n    const passwordValidate = new RegExp(\r\n      \"^(?=.*[a-z])(?=.*[A-Z])(?=.*[0-9])(?=.*[!@#$%^&*.,])(?=.{8,})\"\r\n    );\r\n    if (retypepasswordx !== npasswordx) {\r\n      setCheckedRTNPass(false);\r\n      // eslint-disable-next-line no-unused-expressions\r\n      document.getElementById(\"retypepassword\").innerHTML = \"Passwords don't match<br>\";\r\n    }\r\n    if (retypepasswordx.match(passwordValidate)) {\r\n      setCheckedRTNPass(true);\r\n      // eslint-disable-next-line no-unused-expressions\r\n      document.getElementById(\"retypepassword\").innerHTML = \"\";\r\n    }\r\n    setEnabled(checkedNPass === true && checkedRTNPass === true);\r\n  };\r\n\r\n  const handleClick = (e) => {\r\n    handleOnNPasswordKeys();\r\n    handleOnPasswordKeys();\r\n    handleOnRTNPasswordKeys();\r\n    if (enabled) {\r\n      setOpened(true);\r\n      e.preventDefault();\r\n      const data11 = JSON.parse(localStorage.getItem(\"user1\"));\r\n      const emailCh = data11.email;\r\n      const raw = JSON.stringify({ username: emailCh, password: passwordx, npassword: npasswordx });\r\n      const requestOptions = {\r\n        method: \"POST\",\r\n        headers: myHeaders,\r\n        body: raw,\r\n        redirect: \"follow\",\r\n      };\r\n      fetch(`${process.env.REACT_APP_ZAVE_URL}/individualLogin/changepass`, requestOptions)\r\n        .then(async (res) => {\r\n          const aToken = res.headers.get(\"token-1\");\r\n          localStorage.setItem(\"rexxdex\", aToken);\r\n          return res.json();\r\n        })\r\n        .then((result) => {\r\n          setOpened(false);\r\n          if (result.message === \"Expired Access\") {\r\n            navigate(\"/authentication/sign-in\");\r\n            window.location.reload();\r\n          }\r\n          if (result.message === \"Token Does Not Exist\") {\r\n            navigate(\"/authentication/sign-in\");\r\n            window.location.reload();\r\n          }\r\n          if (result.message === \"Unauthorized Access\") {\r\n            navigate(\"/authentication/forbiddenPage\");\r\n            window.location.reload();\r\n          }\r\n          MySwal.fire({\r\n            title: result.status,\r\n            type: \"success\",\r\n            text: result.message,\r\n          }).then(() => {\r\n            if (result.status === \"SUCCESS\") {\r\n              window.location.reload();\r\n            }\r\n          });\r\n        })\r\n        .catch((error) => {\r\n          setOpened(false);\r\n          MySwal.fire({\r\n            title: error.status,\r\n            type: \"error\",\r\n            text: error.message,\r\n          });\r\n        });\r\n    }\r\n  };\r\n\r\n  return (\r\n    <DashboardLayout>\r\n      <DashboardNavbar />\r\n      <Card>\r\n        <MDBox pt={3.5} pb={3.5} px={30}>\r\n          <MDBox\r\n            variant=\"gradient\"\r\n            bgColor=\"info\"\r\n            borderRadius=\"lg\"\r\n            coloredShadow=\"info\"\r\n            mx={2}\r\n            mt={-3}\r\n            p={2}\r\n            mb={1}\r\n            textAlign=\"center\"\r\n          >\r\n            <MDTypography variant=\"h4\" fontWeight=\"medium\" color=\"white\" mt={1}>\r\n              CHANGE PASSWORD\r\n            </MDTypography>\r\n          </MDBox>\r\n          <MDBox\r\n            variant=\"gradient\"\r\n            bgColor=\"error\"\r\n            borderRadius=\"lg\"\r\n            coloredShadow=\"success\"\r\n            mx={3}\r\n            mt={1}\r\n            p={1}\r\n            mb={1}\r\n            textAlign=\"center\"\r\n          >\r\n            <MDTypography variant=\"gradient\" fontSize=\"60%\" color=\"white\" id=\"password\">\r\n              {\" \"}\r\n            </MDTypography>\r\n            <MDTypography variant=\"gradient\" fontSize=\"60%\" color=\"white\" id=\"npassword\">\r\n              {\" \"}\r\n            </MDTypography>\r\n            <MDTypography variant=\"gradient\" fontSize=\"60%\" color=\"white\" id=\"retypepassword\">\r\n              {\" \"}\r\n            </MDTypography>\r\n          </MDBox>\r\n          <MDBox component=\"form\" role=\"form\">\r\n            <MDBox mb={2}>\r\n              <Container>\r\n                <div className=\"row\">\r\n                  <div className=\"col-sm-12\">\r\n                    <MDInput\r\n                      type={passwordShown ? \"text\" : \"password\"}\r\n                      label=\"Old Password\"\r\n                      value={passwordx || \"\"}\r\n                      onKeyUp={handleOnPasswordKeys}\r\n                      onChange={(e) => setpassword(e.target.value)}\r\n                      variant=\"standard\"\r\n                      fullWidth\r\n                    />\r\n                  </div>\r\n                </div>\r\n              </Container>\r\n            </MDBox>\r\n            <MDBox mb={2}>\r\n              <Container>\r\n                <div className=\"row\">\r\n                  <div className=\"col-sm-12\">\r\n                    <MDInput\r\n                      type={passwordShown ? \"text\" : \"password\"}\r\n                      value={npasswordx || \"\"}\r\n                      onKeyUp={handleOnNPasswordKeys}\r\n                      onChange={(e) => setnpassword(e.target.value)}\r\n                      label=\"New Password\"\r\n                      variant=\"standard\"\r\n                      fullWidth\r\n                    />\r\n                  </div>\r\n                </div>\r\n              </Container>\r\n            </MDBox>\r\n            <MDBox mb={2}>\r\n              <Container>\r\n                <div className=\"row\">\r\n                  <div className=\"col-sm-12\">\r\n                    <MDInput\r\n                      type={passwordShown ? \"text\" : \"password\"}\r\n                      value={retypepasswordx || \"\"}\r\n                      onKeyUp={handleOnRTNPasswordKeys}\r\n                      onChange={(e) => setretypepassword(e.target.value)}\r\n                      label=\"Retype Password\"\r\n                      variant=\"standard\"\r\n                      fullWidth\r\n                    />\r\n                  </div>\r\n                  <MDTypography\r\n                    variant=\"button\"\r\n                    fontSize=\"60%\"\r\n                    align=\"right\"\r\n                    onClick={togglePassword}\r\n                    mx={0}\r\n                    color=\"info\"\r\n                  >\r\n                    show password\r\n                  </MDTypography>\r\n                </div>\r\n              </Container>\r\n            </MDBox>\r\n            <MDBox mt={4} mb={1}>\r\n              <MDButton variant=\"gradient\" onClick={handleClick} color=\"info\" width=\"40%\">\r\n                Save\r\n              </MDButton>\r\n            </MDBox>\r\n          </MDBox>\r\n        </MDBox>\r\n      </Card>\r\n      <Footer />\r\n      <Backdrop sx={{ color: \"#fff\", zIndex: (theme) => theme.zIndex.drawer + 1 }} open={opened}>\r\n        <CircularProgress color=\"info\" />\r\n      </Backdrop>\r\n    </DashboardLayout>\r\n  );\r\n}\r\n\r\nexport default ChangePassword;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}