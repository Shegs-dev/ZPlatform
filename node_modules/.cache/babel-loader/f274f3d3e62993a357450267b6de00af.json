{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\HP\\\\PlutospaceMono\\\\src\\\\layouts\\\\salary-advance\\\\data\\\\salaryAdvanceData.js\",\n    _s = $RefreshSig$();\n\n/* eslint-disable react/prop-types */\n// Soft UI Dashboard React components\nimport { useEffect, useState } from \"react\";\nimport { Dropdown } from \"react-bootstrap\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport Icon from \"@mui/material/Icon\";\nimport Swal from \"sweetalert2\";\nimport withReactContent from \"sweetalert2-react-content\";\nimport PHeaders from \"postHeader\";\nimport GHeaders from \"getHeader\";\nimport { useNavigate } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function SalaryAdvanceData() {\n  _s();\n\n  const MySwal = withReactContent(Swal);\n  const [items, setItems] = useState([]);\n  const {\n    allPHeaders: myHeaders\n  } = PHeaders();\n  const {\n    allGHeaders: miHeaders\n  } = GHeaders();\n  const navigate = useNavigate(); // Method to handle update\n\n  const handleUpdate = (idx, orgIDx, empIDx, amountx, createdTimex, commentx, approverIDx, statusx, deleteFlagx) => {\n    const raw = JSON.stringify({\n      id: idx,\n      orgID: orgIDx,\n      empID: empIDx,\n      amount: amountx,\n      createdTime: createdTimex,\n      deleteFlag: deleteFlagx,\n      comment: commentx,\n      approverID: approverIDx,\n      status: statusx\n    });\n    const requestOptions = {\n      method: \"POST\",\n      headers: myHeaders,\n      body: raw,\n      redirect: \"follow\"\n    };\n    fetch(`${process.env.REACT_APP_TANTA_URL}/salaryAdvance/update`, requestOptions).then(async res => {\n      const aToken = res.headers.get(\"token-1\");\n      localStorage.setItem(\"rexxdex\", aToken);\n      return res.json();\n    }).then(resx => {\n      if (resx.message === \"Expired Access\") {\n        navigate(\"/authentication/sign-in\");\n      }\n\n      if (resx.message === \"Token Does Not Exist\") {\n        navigate(\"/authentication/sign-in\");\n      }\n\n      if (resx.message === \"Unauthorized Access\") {\n        navigate(\"/authentication/forbiddenPage\");\n      }\n\n      MySwal.fire({\n        title: resx.status,\n        type: \"success\",\n        text: resx.message\n      }).then(() => {\n        window.location.reload();\n      });\n    }).catch(error => {\n      MySwal.fire({\n        title: error.status,\n        type: \"error\",\n        text: error.message\n      });\n    });\n  }; // Method to filter departments\n\n\n  const handleDisapprove = value => {\n    const data11 = JSON.parse(localStorage.getItem(\"user1\"));\n    const filteredItems = items.filter(item => item.id === value); // Avoid filter for empty string\n\n    if (data11.personalID !== filteredItems[0].approverID) {\n      MySwal.fire({\n        title: \"APPROVER_ERROR\",\n        type: \"error\",\n        text: \"You Are Not The Approver For This Request\"\n      }).then(() => {\n        window.location.reload();\n      });\n    } else if (filteredItems[0].status !== 0) {\n      MySwal.fire({\n        title: \"DECISION_MADE\",\n        type: \"error\",\n        text: \"You Cannot Change The Decision Already Made For This Request\"\n      }).then(() => {\n        window.location.reload();\n      });\n    } else {\n      MySwal.fire({\n        title: \"Add Comment\",\n        html: `<textarea rows=\"9\" id=\"comment\" class=\"form-control\"></textarea>`,\n        confirmButtonText: \"Save\",\n        showCancelButton: true,\n        confirmButtonColor: \"#3085d6\",\n        cancelButtonColor: \"#d33\",\n        preConfirm: () => {\n          const comment = Swal.getPopup().querySelector(\"#comment\").value;\n\n          if (comment.length === 0) {\n            Swal.showValidationMessage(`Please enter a comment`);\n          } else {\n            Swal.resetValidationMessage();\n            handleUpdate(filteredItems[0].id, filteredItems[0].orgID, filteredItems[0].empID, filteredItems[0].amount, filteredItems[0].createdTime, comment, filteredItems[0].approverID, 2, filteredItems[0].deleteFlag);\n          }\n        }\n      });\n    }\n  }; // Method to handle diable\n\n\n  const handleDisable = value => {\n    MySwal.fire({\n      title: \"Are you sure?\",\n      text: \"You won't be able to revert this!\",\n      icon: \"warning\",\n      showCancelButton: true,\n      confirmButtonColor: \"#3085d6\",\n      cancelButtonColor: \"#d33\",\n      confirmButtonText: \"Yes, Delete it!\"\n    }).then(result => {\n      if (result.isConfirmed) {\n        const requestOptions = {\n          method: \"DELETE\",\n          headers: miHeaders\n        };\n        fetch(`${process.env.REACT_APP_TANTA_URL}/salaryAdvance/delete/${value}`, requestOptions).then(async res => {\n          const aToken = res.headers.get(\"token-1\");\n          localStorage.setItem(\"rexxdex\", aToken);\n          return res.json();\n        }).then(resx => {\n          if (resx.message === \"Expired Access\") {\n            navigate(\"/authentication/sign-in\");\n          }\n\n          if (resx.message === \"Token Does Not Exist\") {\n            navigate(\"/authentication/sign-in\");\n          }\n\n          if (resx.message === \"Unauthorized Access\") {\n            navigate(\"/authentication/forbiddenPage\");\n          }\n\n          MySwal.fire({\n            title: resx.status,\n            type: \"success\",\n            text: resx.message\n          }).then(() => {\n            window.location.reload();\n          });\n        }).catch(error => {\n          MySwal.fire({\n            title: error.status,\n            type: \"error\",\n            text: error.message\n          });\n        });\n      }\n    });\n  }; // Method to handle approval\n\n\n  const handleApprove = value => {\n    const data11 = JSON.parse(localStorage.getItem(\"user1\"));\n    const filteredItems = items.filter(item => item.id === value);\n\n    if (data11.personalID !== filteredItems[0].approverID) {\n      MySwal.fire({\n        title: \"APPROVER_ERROR\",\n        type: \"error\",\n        text: \"You Are Not The Approver For This Request\"\n      }).then(() => {\n        window.location.reload();\n      });\n    } else if (filteredItems[0].status !== 0) {\n      MySwal.fire({\n        title: \"DECISION_MADE\",\n        type: \"error\",\n        text: \"You Cannot Change The Decision Already Made For This Request\"\n      }).then(() => {\n        window.location.reload();\n      });\n    } else {\n      MySwal.fire({\n        title: \"Are you sure?\",\n        text: \"Do you want to approve this?\",\n        icon: \"warning\",\n        showCancelButton: true,\n        confirmButtonColor: \"#3085d6\",\n        cancelButtonColor: \"#d33\",\n        confirmButtonText: \"Yes, Approve it!\"\n      }).then(result => {\n        if (result.isConfirmed) {\n          const headers = miHeaders;\n          const personalIDs = data11.personalID;\n          const orgIDx = data11.orgID;\n          fetch(`${process.env.REACT_APP_ZAVE_URL}/user/getUserInfo/${orgIDx}/${personalIDs}`, {\n            headers\n          }).then(async res => {\n            const aToken = res.headers.get(\"token-1\");\n            localStorage.setItem(\"rexxdex\", aToken);\n            return res.json();\n          }).then(resultx => {\n            if (resultx.message === \"Expired Access\") {\n              navigate(\"/authentication/sign-in\");\n              window.location.reload();\n            }\n\n            if (resultx.message === \"Token Does Not Exist\") {\n              navigate(\"/authentication/sign-in\");\n              window.location.reload();\n            }\n\n            if (resultx.message === \"Unauthorized Access\") {\n              navigate(\"/authentication/forbiddenPage\");\n              window.location.reload();\n            }\n\n            const narrationx = `Salary Advance For ${resultx.personal.fname} ${resultx.personal.lname}`; // Check if Bank Code And Destination Code Are Set\n\n            if (resultx.bankAccount === null) {\n              MySwal.fire({\n                title: \"DECISION_REFUSED\",\n                type: \"error\",\n                text: \"This Decision Cannot Happen Because There Is No Bank Account Set For Employee. Please See Your System Administrator Afterwards\"\n              });\n            } else {\n              const raw1 = JSON.stringify({\n                amount: filteredItems[0].amount,\n                narration: narrationx,\n                destinationBankCode: resultx.bankAccount.bankCode,\n                destinationAccountNumber: resultx.bankAccount.acctNo\n              });\n              const requestOptions1 = {\n                method: \"POST\",\n                headers: myHeaders,\n                body: raw1,\n                redirect: \"follow\"\n              };\n              fetch(`${process.env.REACT_APP_TANTA_URL}/salaryAdvance/pay/${orgIDx}`, requestOptions1).then(async res => {\n                const aToken = res.headers.get(\"token-1\");\n                localStorage.setItem(\"rexxdex\", aToken);\n                return res.json();\n              }).then(resultpay => {\n                if (resultpay.message === \"Expired Access\") {\n                  navigate(\"/authentication/sign-in\");\n                  window.location.reload();\n                }\n\n                if (resultpay.message === \"Token Does Not Exist\") {\n                  navigate(\"/authentication/sign-in\");\n                  window.location.reload();\n                }\n\n                if (resultpay.message === \"Unauthorized Access\") {\n                  navigate(\"/authentication/forbiddenPage\");\n                  window.location.reload();\n                }\n\n                if (resultpay.status === \"SUCCESS\") {\n                  handleUpdate(filteredItems[0].id, filteredItems[0].orgID, filteredItems[0].empID, filteredItems[0].amount, filteredItems[0].createdTime, filteredItems[0].comment, filteredItems[0].approverID, 1, filteredItems[0].deleteFlag);\n                } else {\n                  MySwal.fire({\n                    title: resultpay.status,\n                    type: \"success\",\n                    text: resultpay.message\n                  }).then(() => {\n                    window.location.reload();\n                  });\n                }\n              }).catch(error => {\n                MySwal.fire({\n                  title: error.status,\n                  type: \"error\",\n                  text: error.message\n                });\n              });\n            }\n          });\n        }\n      });\n    }\n  }; // Method to setup update\n\n\n  const handleShow = value => {\n    navigate(`/Salary-Advance/Update?id=${value}`);\n  }; // Method to change date from timestamp\n\n\n  const changeDate = timestamp => {\n    const date = new Date(timestamp);\n    const retDate = date.toDateString();\n    return retDate;\n  }; // Method to change type\n\n\n  const changeType = status => {\n    const filteredItems = items.filter(item => item.id === status);\n\n    if (filteredItems[0].status === 1) {\n      return \"Approved\";\n    }\n\n    if (filteredItems[0].status === 2) {\n      return \"Disapproved\";\n    }\n\n    return \"Created\";\n  };\n\n  const changeCol = status => {\n    const filteredItems = items.filter(item => item.id === status);\n\n    if (filteredItems[0].status === 1) {\n      return \"#00FF00\";\n    }\n\n    if (filteredItems[0].status === 2) {\n      return \"#FF0000\";\n    }\n\n    return \"#0000FF\";\n  }; // Method to fetch all departments\n  // env.environments\n\n\n  useEffect(() => {\n    const headers = miHeaders;\n    const data11 = JSON.parse(localStorage.getItem(\"user1\"));\n    const orgIDs = data11.orgID;\n    let isMounted = true;\n\n    if (data11.roleID !== \"0\" && data11.roleID !== \"\" && data11.roleID !== \"null\" && data11.roleID !== null) {\n      const personalIds = data11.personalID;\n      fetch(`${process.env.REACT_APP_TANTA_URL}/salaryAdvance/getForEmp/${orgIDs}/${personalIds}`, {\n        headers\n      }).then(async res => {\n        const aToken = res.headers.get(\"token-1\");\n        localStorage.setItem(\"rexxdex\", aToken);\n        return res.json();\n      }).then(result => {\n        if (result.message === \"Expired Access\") {\n          navigate(\"/authentication/sign-in\");\n          window.location.reload();\n        }\n\n        if (result.message === \"Token Does Not Exist\") {\n          navigate(\"/authentication/sign-in\");\n          window.location.reload();\n        }\n\n        if (result.message === \"Unauthorized Access\") {\n          navigate(\"/authentication/forbiddenPage\");\n          window.location.reload();\n        }\n\n        if (isMounted) {\n          setItems(result);\n        }\n      });\n    } else {\n      fetch(`${process.env.REACT_APP_TANTA_URL}/salaryAdvance/gets/${orgIDs}`, {\n        headers\n      }).then(async res => {\n        const aToken = res.headers.get(\"token-1\");\n        localStorage.setItem(\"rexxdex\", aToken);\n        return res.json();\n      }).then(result => {\n        if (result.message === \"Expired Access\") {\n          navigate(\"/authentication/sign-in\");\n          window.location.reload();\n        }\n\n        if (result.message === \"Token Does Not Exist\") {\n          navigate(\"/authentication/sign-in\");\n          window.location.reload();\n        }\n\n        if (result.message === \"Unauthorized Access\") {\n          navigate(\"/authentication/forbiddenPage\");\n          window.location.reload();\n        }\n\n        if (isMounted) {\n          setItems(result);\n        }\n      });\n    }\n\n    return () => {\n      isMounted = false;\n    };\n  }, []); // Return table\n\n  return {\n    columns: [{\n      Header: \"employee name\",\n      accessor: \"empName\",\n      align: \"left\"\n    }, {\n      Header: \"amount (ngn)\",\n      accessor: \"amount\",\n      align: \"left\"\n    }, {\n      Header: \"comment\",\n      accessor: \"comment\",\n      align: \"left\"\n    }, {\n      Header: \"approver\",\n      accessor: \"approverName\",\n      align: \"left\"\n    }, {\n      Header: \"Status\",\n      accessor: \"status\",\n      Cell: _ref => {\n        let {\n          cell: {\n            row\n          }\n        } = _ref;\n        return /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"badge badge-pill\",\n          style: {\n            backgroundColor: changeCol(row.original.id)\n          },\n          children: changeType(row.original.id)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 443,\n          columnNumber: 11\n        }, this);\n      },\n      align: \"left\"\n    }, {\n      Header: \"Date Created\",\n      accessor: \"createdTime\",\n      Cell: _ref2 => {\n        let {\n          cell: {\n            value\n          }\n        } = _ref2;\n        return changeDate(value);\n      },\n      align: \"left\"\n    }, {\n      Header: \"actions\",\n      accessor: \"id\",\n      // eslint-disable-next-line react/prop-types\n      Cell: _ref3 => {\n        let {\n          cell: {\n            value\n          }\n        } = _ref3;\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            width: \"100%\",\n            backgroundColor: \"#dadada\",\n            borderRadius: \"2px\"\n          },\n          children: /*#__PURE__*/_jsxDEV(Dropdown, {\n            children: [/*#__PURE__*/_jsxDEV(Dropdown.Toggle, {\n              variant: \"secondary\",\n              id: \"dropdown-basic\",\n              children: /*#__PURE__*/_jsxDEV(Icon, {\n                sx: {\n                  fontWeight: \"light\"\n                },\n                children: \"settings\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 472,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 471,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Dropdown.Menu, {\n              children: [/*#__PURE__*/_jsxDEV(Dropdown.Item, {\n                onClick: () => handleShow(value),\n                children: \"Update\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 476,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(Dropdown.Item, {\n                onClick: () => handleDisapprove(value),\n                children: \"Disapprove\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 477,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(Dropdown.Item, {\n                onClick: () => handleApprove(value),\n                children: \"Approve\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 478,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(Dropdown.Item, {\n                onClick: () => handleDisable(value),\n                children: \"Disable\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 479,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 475,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 470,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 463,\n          columnNumber: 11\n        }, this);\n      },\n      align: \"left\"\n    }],\n    rows: items\n  };\n}\n\n_s(SalaryAdvanceData, \"K4zs12HydVpcriwJbXPqsjCjNz0=\", false, function () {\n  return [useNavigate];\n});\n\n_c = SalaryAdvanceData;\n\nvar _c;\n\n$RefreshReg$(_c, \"SalaryAdvanceData\");","map":{"version":3,"names":["useEffect","useState","Dropdown","Icon","Swal","withReactContent","PHeaders","GHeaders","useNavigate","SalaryAdvanceData","MySwal","items","setItems","allPHeaders","myHeaders","allGHeaders","miHeaders","navigate","handleUpdate","idx","orgIDx","empIDx","amountx","createdTimex","commentx","approverIDx","statusx","deleteFlagx","raw","JSON","stringify","id","orgID","empID","amount","createdTime","deleteFlag","comment","approverID","status","requestOptions","method","headers","body","redirect","fetch","process","env","REACT_APP_TANTA_URL","then","res","aToken","get","localStorage","setItem","json","resx","message","fire","title","type","text","window","location","reload","catch","error","handleDisapprove","value","data11","parse","getItem","filteredItems","filter","item","personalID","html","confirmButtonText","showCancelButton","confirmButtonColor","cancelButtonColor","preConfirm","getPopup","querySelector","length","showValidationMessage","resetValidationMessage","handleDisable","icon","result","isConfirmed","handleApprove","personalIDs","REACT_APP_ZAVE_URL","resultx","narrationx","personal","fname","lname","bankAccount","raw1","narration","destinationBankCode","bankCode","destinationAccountNumber","acctNo","requestOptions1","resultpay","handleShow","changeDate","timestamp","date","Date","retDate","toDateString","changeType","changeCol","orgIDs","isMounted","roleID","personalIds","columns","Header","accessor","align","Cell","cell","row","backgroundColor","original","width","borderRadius","fontWeight","rows"],"sources":["C:/Users/HP/PlutospaceMono/src/layouts/salary-advance/data/salaryAdvanceData.js"],"sourcesContent":["/* eslint-disable react/prop-types */\r\n// Soft UI Dashboard React components\r\nimport { useEffect, useState } from \"react\";\r\nimport { Dropdown } from \"react-bootstrap\";\r\nimport \"bootstrap/dist/css/bootstrap.min.css\";\r\nimport Icon from \"@mui/material/Icon\";\r\nimport Swal from \"sweetalert2\";\r\nimport withReactContent from \"sweetalert2-react-content\";\r\nimport PHeaders from \"postHeader\";\r\nimport GHeaders from \"getHeader\";\r\nimport { useNavigate } from \"react-router-dom\";\r\n\r\nexport default function SalaryAdvanceData() {\r\n  const MySwal = withReactContent(Swal);\r\n  const [items, setItems] = useState([]);\r\n\r\n  const { allPHeaders: myHeaders } = PHeaders();\r\n  const { allGHeaders: miHeaders } = GHeaders();\r\n\r\n  const navigate = useNavigate();\r\n  // Method to handle update\r\n  const handleUpdate = (\r\n    idx,\r\n    orgIDx,\r\n    empIDx,\r\n    amountx,\r\n    createdTimex,\r\n    commentx,\r\n    approverIDx,\r\n    statusx,\r\n    deleteFlagx\r\n  ) => {\r\n    const raw = JSON.stringify({\r\n      id: idx,\r\n      orgID: orgIDx,\r\n      empID: empIDx,\r\n      amount: amountx,\r\n      createdTime: createdTimex,\r\n      deleteFlag: deleteFlagx,\r\n      comment: commentx,\r\n      approverID: approverIDx,\r\n      status: statusx,\r\n    });\r\n    const requestOptions = {\r\n      method: \"POST\",\r\n      headers: myHeaders,\r\n      body: raw,\r\n      redirect: \"follow\",\r\n    };\r\n\r\n    fetch(`${process.env.REACT_APP_TANTA_URL}/salaryAdvance/update`, requestOptions)\r\n      .then(async (res) => {\r\n        const aToken = res.headers.get(\"token-1\");\r\n        localStorage.setItem(\"rexxdex\", aToken);\r\n        return res.json();\r\n      })\r\n      .then((resx) => {\r\n        if (resx.message === \"Expired Access\") {\r\n          navigate(\"/authentication/sign-in\");\r\n        }\r\n        if (resx.message === \"Token Does Not Exist\") {\r\n          navigate(\"/authentication/sign-in\");\r\n        }\r\n        if (resx.message === \"Unauthorized Access\") {\r\n          navigate(\"/authentication/forbiddenPage\");\r\n        }\r\n        MySwal.fire({\r\n          title: resx.status,\r\n          type: \"success\",\r\n          text: resx.message,\r\n        }).then(() => {\r\n          window.location.reload();\r\n        });\r\n      })\r\n      .catch((error) => {\r\n        MySwal.fire({\r\n          title: error.status,\r\n          type: \"error\",\r\n          text: error.message,\r\n        });\r\n      });\r\n  };\r\n\r\n  // Method to filter departments\r\n  const handleDisapprove = (value) => {\r\n    const data11 = JSON.parse(localStorage.getItem(\"user1\"));\r\n    const filteredItems = items.filter((item) => item.id === value);\r\n    // Avoid filter for empty string\r\n    if (data11.personalID !== filteredItems[0].approverID) {\r\n      MySwal.fire({\r\n        title: \"APPROVER_ERROR\",\r\n        type: \"error\",\r\n        text: \"You Are Not The Approver For This Request\",\r\n      }).then(() => {\r\n        window.location.reload();\r\n      });\r\n    } else if (filteredItems[0].status !== 0) {\r\n      MySwal.fire({\r\n        title: \"DECISION_MADE\",\r\n        type: \"error\",\r\n        text: \"You Cannot Change The Decision Already Made For This Request\",\r\n      }).then(() => {\r\n        window.location.reload();\r\n      });\r\n    } else {\r\n      MySwal.fire({\r\n        title: \"Add Comment\",\r\n        html: `<textarea rows=\"9\" id=\"comment\" class=\"form-control\"></textarea>`,\r\n        confirmButtonText: \"Save\",\r\n        showCancelButton: true,\r\n        confirmButtonColor: \"#3085d6\",\r\n        cancelButtonColor: \"#d33\",\r\n        preConfirm: () => {\r\n          const comment = Swal.getPopup().querySelector(\"#comment\").value;\r\n          if (comment.length === 0) {\r\n            Swal.showValidationMessage(`Please enter a comment`);\r\n          } else {\r\n            Swal.resetValidationMessage();\r\n            handleUpdate(\r\n              filteredItems[0].id,\r\n              filteredItems[0].orgID,\r\n              filteredItems[0].empID,\r\n              filteredItems[0].amount,\r\n              filteredItems[0].createdTime,\r\n              comment,\r\n              filteredItems[0].approverID,\r\n              2,\r\n              filteredItems[0].deleteFlag\r\n            );\r\n          }\r\n        },\r\n      });\r\n    }\r\n  };\r\n\r\n  // Method to handle diable\r\n  const handleDisable = (value) => {\r\n    MySwal.fire({\r\n      title: \"Are you sure?\",\r\n      text: \"You won't be able to revert this!\",\r\n      icon: \"warning\",\r\n      showCancelButton: true,\r\n      confirmButtonColor: \"#3085d6\",\r\n      cancelButtonColor: \"#d33\",\r\n      confirmButtonText: \"Yes, Delete it!\",\r\n    }).then((result) => {\r\n      if (result.isConfirmed) {\r\n        const requestOptions = {\r\n          method: \"DELETE\",\r\n          headers: miHeaders,\r\n        };\r\n\r\n        fetch(`${process.env.REACT_APP_TANTA_URL}/salaryAdvance/delete/${value}`, requestOptions)\r\n          .then(async (res) => {\r\n            const aToken = res.headers.get(\"token-1\");\r\n            localStorage.setItem(\"rexxdex\", aToken);\r\n            return res.json();\r\n          })\r\n          .then((resx) => {\r\n            if (resx.message === \"Expired Access\") {\r\n              navigate(\"/authentication/sign-in\");\r\n            }\r\n            if (resx.message === \"Token Does Not Exist\") {\r\n              navigate(\"/authentication/sign-in\");\r\n            }\r\n            if (resx.message === \"Unauthorized Access\") {\r\n              navigate(\"/authentication/forbiddenPage\");\r\n            }\r\n            MySwal.fire({\r\n              title: resx.status,\r\n              type: \"success\",\r\n              text: resx.message,\r\n            }).then(() => {\r\n              window.location.reload();\r\n            });\r\n          })\r\n          .catch((error) => {\r\n            MySwal.fire({\r\n              title: error.status,\r\n              type: \"error\",\r\n              text: error.message,\r\n            });\r\n          });\r\n      }\r\n    });\r\n  };\r\n\r\n  // Method to handle approval\r\n  const handleApprove = (value) => {\r\n    const data11 = JSON.parse(localStorage.getItem(\"user1\"));\r\n    const filteredItems = items.filter((item) => item.id === value);\r\n    if (data11.personalID !== filteredItems[0].approverID) {\r\n      MySwal.fire({\r\n        title: \"APPROVER_ERROR\",\r\n        type: \"error\",\r\n        text: \"You Are Not The Approver For This Request\",\r\n      }).then(() => {\r\n        window.location.reload();\r\n      });\r\n    } else if (filteredItems[0].status !== 0) {\r\n      MySwal.fire({\r\n        title: \"DECISION_MADE\",\r\n        type: \"error\",\r\n        text: \"You Cannot Change The Decision Already Made For This Request\",\r\n      }).then(() => {\r\n        window.location.reload();\r\n      });\r\n    } else {\r\n      MySwal.fire({\r\n        title: \"Are you sure?\",\r\n        text: \"Do you want to approve this?\",\r\n        icon: \"warning\",\r\n        showCancelButton: true,\r\n        confirmButtonColor: \"#3085d6\",\r\n        cancelButtonColor: \"#d33\",\r\n        confirmButtonText: \"Yes, Approve it!\",\r\n      }).then((result) => {\r\n        if (result.isConfirmed) {\r\n          const headers = miHeaders;\r\n\r\n          const personalIDs = data11.personalID;\r\n          const orgIDx = data11.orgID;\r\n          fetch(`${process.env.REACT_APP_ZAVE_URL}/user/getUserInfo/${orgIDx}/${personalIDs}`, {\r\n            headers,\r\n          })\r\n            .then(async (res) => {\r\n              const aToken = res.headers.get(\"token-1\");\r\n              localStorage.setItem(\"rexxdex\", aToken);\r\n              return res.json();\r\n            })\r\n            .then((resultx) => {\r\n              if (resultx.message === \"Expired Access\") {\r\n                navigate(\"/authentication/sign-in\");\r\n                window.location.reload();\r\n              }\r\n              if (resultx.message === \"Token Does Not Exist\") {\r\n                navigate(\"/authentication/sign-in\");\r\n                window.location.reload();\r\n              }\r\n              if (resultx.message === \"Unauthorized Access\") {\r\n                navigate(\"/authentication/forbiddenPage\");\r\n                window.location.reload();\r\n              }\r\n\r\n              const narrationx = `Salary Advance For ${resultx.personal.fname} ${resultx.personal.lname}`;\r\n              // Check if Bank Code And Destination Code Are Set\r\n              if (resultx.bankAccount === null) {\r\n                MySwal.fire({\r\n                  title: \"DECISION_REFUSED\",\r\n                  type: \"error\",\r\n                  text: \"This Decision Cannot Happen Because There Is No Bank Account Set For Employee. Please See Your System Administrator Afterwards\",\r\n                });\r\n              } else {\r\n                const raw1 = JSON.stringify({\r\n                  amount: filteredItems[0].amount,\r\n                  narration: narrationx,\r\n                  destinationBankCode: resultx.bankAccount.bankCode,\r\n                  destinationAccountNumber: resultx.bankAccount.acctNo,\r\n                });\r\n                const requestOptions1 = {\r\n                  method: \"POST\",\r\n                  headers: myHeaders,\r\n                  body: raw1,\r\n                  redirect: \"follow\",\r\n                };\r\n\r\n                fetch(\r\n                  `${process.env.REACT_APP_TANTA_URL}/salaryAdvance/pay/${orgIDx}`,\r\n                  requestOptions1\r\n                )\r\n                  .then(async (res) => {\r\n                    const aToken = res.headers.get(\"token-1\");\r\n                    localStorage.setItem(\"rexxdex\", aToken);\r\n                    return res.json();\r\n                  })\r\n                  .then((resultpay) => {\r\n                    if (resultpay.message === \"Expired Access\") {\r\n                      navigate(\"/authentication/sign-in\");\r\n                      window.location.reload();\r\n                    }\r\n                    if (resultpay.message === \"Token Does Not Exist\") {\r\n                      navigate(\"/authentication/sign-in\");\r\n                      window.location.reload();\r\n                    }\r\n                    if (resultpay.message === \"Unauthorized Access\") {\r\n                      navigate(\"/authentication/forbiddenPage\");\r\n                      window.location.reload();\r\n                    }\r\n                    if (resultpay.status === \"SUCCESS\") {\r\n                      handleUpdate(\r\n                        filteredItems[0].id,\r\n                        filteredItems[0].orgID,\r\n                        filteredItems[0].empID,\r\n                        filteredItems[0].amount,\r\n                        filteredItems[0].createdTime,\r\n                        filteredItems[0].comment,\r\n                        filteredItems[0].approverID,\r\n                        1,\r\n                        filteredItems[0].deleteFlag\r\n                      );\r\n                    } else {\r\n                      MySwal.fire({\r\n                        title: resultpay.status,\r\n                        type: \"success\",\r\n                        text: resultpay.message,\r\n                      }).then(() => {\r\n                        window.location.reload();\r\n                      });\r\n                    }\r\n                  })\r\n                  .catch((error) => {\r\n                    MySwal.fire({\r\n                      title: error.status,\r\n                      type: \"error\",\r\n                      text: error.message,\r\n                    });\r\n                  });\r\n              }\r\n            });\r\n        }\r\n      });\r\n    }\r\n  };\r\n\r\n  // Method to setup update\r\n  const handleShow = (value) => {\r\n    navigate(`/Salary-Advance/Update?id=${value}`);\r\n  };\r\n\r\n  // Method to change date from timestamp\r\n  const changeDate = (timestamp) => {\r\n    const date = new Date(timestamp);\r\n    const retDate = date.toDateString();\r\n    return retDate;\r\n  };\r\n\r\n  // Method to change type\r\n  const changeType = (status) => {\r\n    const filteredItems = items.filter((item) => item.id === status);\r\n    if (filteredItems[0].status === 1) {\r\n      return \"Approved\";\r\n    }\r\n    if (filteredItems[0].status === 2) {\r\n      return \"Disapproved\";\r\n    }\r\n    return \"Created\";\r\n  };\r\n\r\n  const changeCol = (status) => {\r\n    const filteredItems = items.filter((item) => item.id === status);\r\n    if (filteredItems[0].status === 1) {\r\n      return \"#00FF00\";\r\n    }\r\n    if (filteredItems[0].status === 2) {\r\n      return \"#FF0000\";\r\n    }\r\n    return \"#0000FF\";\r\n  };\r\n\r\n  // Method to fetch all departments\r\n  // env.environments\r\n  useEffect(() => {\r\n    const headers = miHeaders;\r\n\r\n    const data11 = JSON.parse(localStorage.getItem(\"user1\"));\r\n    const orgIDs = data11.orgID;\r\n    let isMounted = true;\r\n\r\n    if (\r\n      data11.roleID !== \"0\" &&\r\n      data11.roleID !== \"\" &&\r\n      data11.roleID !== \"null\" &&\r\n      data11.roleID !== null\r\n    ) {\r\n      const personalIds = data11.personalID;\r\n      fetch(`${process.env.REACT_APP_TANTA_URL}/salaryAdvance/getForEmp/${orgIDs}/${personalIds}`, {\r\n        headers,\r\n      })\r\n        .then(async (res) => {\r\n          const aToken = res.headers.get(\"token-1\");\r\n          localStorage.setItem(\"rexxdex\", aToken);\r\n          return res.json();\r\n        })\r\n        .then((result) => {\r\n          if (result.message === \"Expired Access\") {\r\n            navigate(\"/authentication/sign-in\");\r\n            window.location.reload();\r\n          }\r\n          if (result.message === \"Token Does Not Exist\") {\r\n            navigate(\"/authentication/sign-in\");\r\n            window.location.reload();\r\n          }\r\n          if (result.message === \"Unauthorized Access\") {\r\n            navigate(\"/authentication/forbiddenPage\");\r\n            window.location.reload();\r\n          }\r\n          if (isMounted) {\r\n            setItems(result);\r\n          }\r\n        });\r\n    } else {\r\n      fetch(`${process.env.REACT_APP_TANTA_URL}/salaryAdvance/gets/${orgIDs}`, { headers })\r\n        .then(async (res) => {\r\n          const aToken = res.headers.get(\"token-1\");\r\n          localStorage.setItem(\"rexxdex\", aToken);\r\n          return res.json();\r\n        })\r\n        .then((result) => {\r\n          if (result.message === \"Expired Access\") {\r\n            navigate(\"/authentication/sign-in\");\r\n            window.location.reload();\r\n          }\r\n          if (result.message === \"Token Does Not Exist\") {\r\n            navigate(\"/authentication/sign-in\");\r\n            window.location.reload();\r\n          }\r\n          if (result.message === \"Unauthorized Access\") {\r\n            navigate(\"/authentication/forbiddenPage\");\r\n            window.location.reload();\r\n          }\r\n          if (isMounted) {\r\n            setItems(result);\r\n          }\r\n        });\r\n    }\r\n\r\n    return () => {\r\n      isMounted = false;\r\n    };\r\n  }, []);\r\n\r\n  // Return table\r\n  return {\r\n    columns: [\r\n      { Header: \"employee name\", accessor: \"empName\", align: \"left\" },\r\n      { Header: \"amount (ngn)\", accessor: \"amount\", align: \"left\" },\r\n      { Header: \"comment\", accessor: \"comment\", align: \"left\" },\r\n      { Header: \"approver\", accessor: \"approverName\", align: \"left\" },\r\n      {\r\n        Header: \"Status\",\r\n        accessor: \"status\",\r\n        Cell: ({ cell: { row } }) => (\r\n          <span\r\n            className=\"badge badge-pill\"\r\n            style={{ backgroundColor: changeCol(row.original.id) }}\r\n          >\r\n            {changeType(row.original.id)}\r\n          </span>\r\n        ),\r\n        align: \"left\",\r\n      },\r\n      {\r\n        Header: \"Date Created\",\r\n        accessor: \"createdTime\",\r\n        Cell: ({ cell: { value } }) => changeDate(value),\r\n        align: \"left\",\r\n      },\r\n      {\r\n        Header: \"actions\",\r\n        accessor: \"id\",\r\n        // eslint-disable-next-line react/prop-types\r\n        Cell: ({ cell: { value } }) => (\r\n          <div\r\n            style={{\r\n              width: \"100%\",\r\n              backgroundColor: \"#dadada\",\r\n              borderRadius: \"2px\",\r\n            }}\r\n          >\r\n            <Dropdown>\r\n              <Dropdown.Toggle variant=\"secondary\" id=\"dropdown-basic\">\r\n                <Icon sx={{ fontWeight: \"light\" }}>settings</Icon>\r\n              </Dropdown.Toggle>\r\n\r\n              <Dropdown.Menu>\r\n                <Dropdown.Item onClick={() => handleShow(value)}>Update</Dropdown.Item>\r\n                <Dropdown.Item onClick={() => handleDisapprove(value)}>Disapprove</Dropdown.Item>\r\n                <Dropdown.Item onClick={() => handleApprove(value)}>Approve</Dropdown.Item>\r\n                <Dropdown.Item onClick={() => handleDisable(value)}>Disable</Dropdown.Item>\r\n              </Dropdown.Menu>\r\n            </Dropdown>\r\n          </div>\r\n        ),\r\n        align: \"left\",\r\n      },\r\n    ],\r\n\r\n    rows: items,\r\n  };\r\n}\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}