{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\ABIOYE DANIEL\\\\Desktop\\\\PlutospaceMono\\\\src\\\\layouts\\\\mattersArising\\\\viewMatter\\\\chats.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from \"react\";\nimport ScrollToBottom from \"react-scroll-to-bottom\";\nimport Swal from \"sweetalert2\";\nimport withReactContent from \"sweetalert2-react-content\";\nimport PHeaders from \"postHeader\";\nimport GHeaders from \"getHeader\";\nimport { useNavigate } from \"react-router-dom\"; // import Footer from \"examples/Footer\";\n// import DashboardLayout from \"examples/LayoutContainers/DashboardLayout\";\n// import DashboardNavbar from \"examples/Navbars/DashboardNavbar\";\n// import MDBox from \"components/MDBox\";\n// import Card from \"@mui/material/Card\";\n// import MDButton from \"components/MDButton\";\n// import { Container } from \"react-bootstrap\";\n// import Emojis from \"./emoji\";\n// eslint-disable-next-line react/prop-types\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nfunction Chat(_ref) {\n  _s();\n\n  let {\n    socket,\n    username,\n    room\n  } = _ref;\n  const MySwal = withReactContent(Swal);\n  const navigate = useNavigate(); // const { emoticons: allEmojis } = Emojis();\n\n  const {\n    allPHeaders: myHeaders\n  } = PHeaders();\n  const {\n    allGHeaders: miHeaders\n  } = GHeaders();\n  const [currentMessage, setCurrentMessage] = useState(\"\");\n  const [messageList, setMessageList] = useState([]);\n  const [titlex, setTitlex] = useState(\"\");\n  useEffect(() => {\n    const messageMap = [];\n    const queryString = window.location.search;\n    const urlParams = new URLSearchParams(queryString);\n    const concernID = urlParams.get(\"room\");\n    const headers = miHeaders;\n    let isMounted = true;\n    fetch(`${process.env.REACT_APP_SHASHA_URL}/concernChat/getForConcern/${concernID}`, {\n      headers\n    }).then(async res => {\n      const aToken = res.headers.get(\"token-1\");\n      localStorage.setItem(\"rexxdex\", aToken);\n      return res.json();\n    }).then(result => {\n      if (result.message === \"Expired Access\") {\n        navigate(\"/authentication/sign-in\");\n        window.location.reload();\n      }\n\n      if (result.message === \"Token Does Not Exist\") {\n        navigate(\"/authentication/sign-in\");\n        window.location.reload();\n      }\n\n      if (result.message === \"Unauthorized Access\") {\n        navigate(\"/authentication/forbiddenPage\");\n        window.location.reload();\n      }\n\n      if (isMounted) {\n        // eslint-disable-next-line array-callback-return\n        result.map(item => {\n          const fdy = {\n            id: item.id,\n            room: concernID,\n            author: item.senderName,\n            message: item.message,\n            time: `${new Date(item.createdTime).getHours()}:${new Date(Date.now()).getMinutes()}`\n          };\n          messageMap.push(fdy);\n        });\n        setMessageList(messageMap);\n      }\n    });\n    return () => {\n      isMounted = false;\n    };\n  }, []);\n\n  const sendMessage = async () => {\n    if (currentMessage !== \"\") {\n      const messageData = {\n        id: messageList.length + 1,\n        room,\n        author: username,\n        message: currentMessage,\n        time: `${new Date(Date.now()).getHours()}:${new Date(Date.now()).getMinutes()}`\n      }; // eslint-disable-next-line react/prop-types\n\n      await socket.emit(\"send_message\", messageData);\n      setMessageList(list => [...list, messageData]);\n      setCurrentMessage(\"\");\n      const data11 = JSON.parse(localStorage.getItem(\"user1\"));\n      const orgIDs = data11.orgID;\n      const personalIDs = data11.personalID;\n      const raw = JSON.stringify({\n        orgID: orgIDs,\n        concernID: room,\n        message: currentMessage,\n        senderID: personalIDs\n      });\n      const requestOptions = {\n        method: \"POST\",\n        headers: myHeaders,\n        body: raw,\n        redirect: \"follow\"\n      };\n      fetch(`${process.env.REACT_APP_SHASHA_URL}/concernChat/save`, requestOptions).then(async res => {\n        const aToken = res.headers.get(\"token-1\");\n        localStorage.setItem(\"rexxdex\", aToken);\n        return res.json();\n      }).then(result => {\n        if (result.message === \"Expired Access\") {\n          navigate(\"/authentication/sign-in\");\n          window.location.reload();\n        }\n\n        if (result.message === \"Token Does Not Exist\") {\n          navigate(\"/authentication/sign-in\");\n          window.location.reload();\n        }\n\n        if (result.message === \"Unauthorized Access\") {\n          navigate(\"/authentication/forbiddenPage\");\n          window.location.reload();\n        }\n      }).catch(error => {\n        MySwal.fire({\n          title: error.status,\n          type: \"error\",\n          text: error.message\n        });\n      });\n    }\n  };\n\n  useEffect(() => {\n    const headers = miHeaders;\n    const queryString = window.location.search;\n    const urlParams = new URLSearchParams(queryString);\n    const ids = urlParams.get(\"room\");\n    let isMounted = true;\n    fetch(`${process.env.REACT_APP_SHASHA_URL}/concern/getByIds/${ids}`, {\n      headers\n    }).then(async res => {\n      const aToken = res.headers.get(\"token-1\");\n      localStorage.setItem(\"rexxdex\", aToken);\n      return res.json();\n    }).then(result => {\n      if (result.message === \"Expired Access\") {\n        navigate(\"/authentication/sign-in\");\n        window.location.reload();\n      }\n\n      if (result.message === \"Token Does Not Exist\") {\n        navigate(\"/authentication/sign-in\");\n        window.location.reload();\n      }\n\n      if (result.message === \"Unauthorized Access\") {\n        navigate(\"/authentication/forbiddenPage\");\n        window.location.reload();\n      }\n\n      if (isMounted) {\n        setTitlex(result[0].title);\n      }\n    });\n    return () => {\n      isMounted = false;\n    };\n  }, []);\n  useEffect(() => {\n    let isMounted = true; // eslint-disable-next-line react/prop-types\n\n    socket.on(\"receive_message\", data => {\n      if (isMounted) {\n        setMessageList(list => [...list, data]);\n        console.log(data);\n      }\n    });\n    return () => {\n      isMounted = false;\n    };\n  }, [socket]);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"chat-window\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"chat-header\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            overflow: \"hidden\",\n            textOverflow: \"ellipsis\",\n            width: \"30rem\",\n            whiteSpace: \"nowrap\"\n          },\n          children: /*#__PURE__*/_jsxDEV(\"p\", {\n            children: titlex\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 210,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 202,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 201,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"chat-body\",\n        children: /*#__PURE__*/_jsxDEV(ScrollToBottom, {\n          className: \"message-container\",\n          children: messageList.map(messageContent => /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"message\",\n            id: username === messageContent.author ? \"other\" : \"you\",\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"message-content\",\n                children: /*#__PURE__*/_jsxDEV(\"p\", {\n                  children: messageContent.message\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 223,\n                  columnNumber: 21\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 222,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"message-meta\",\n                children: [/*#__PURE__*/_jsxDEV(\"p\", {\n                  id: \"time\",\n                  children: messageContent.time\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 226,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                  id: \"author\",\n                  children: messageContent.author\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 227,\n                  columnNumber: 21\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 225,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 221,\n              columnNumber: 17\n            }, this)\n          }, messageContent.id, false, {\n            fileName: _jsxFileName,\n            lineNumber: 216,\n            columnNumber: 15\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 214,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 213,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"chat-footer\",\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          value: currentMessage,\n          placeholder: \"Type Message...\",\n          onChange: event => {\n            setCurrentMessage(event.target.value);\n          },\n          onKeyPress: event => {\n            // eslint-disable-next-line no-unused-expressions\n            event.key === \"Enter\" && sendMessage();\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 235,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"button\",\n          onClick: sendMessage,\n          children: \"send\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 247,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 234,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 200,\n      columnNumber: 7\n    }, this)\n  }, void 0, false);\n}\n\n_s(Chat, \"vzth6sVGjfYW2BmzLCDdIkbGmak=\", false, function () {\n  return [useNavigate];\n});\n\n_c = Chat;\nexport default Chat;\n\nvar _c;\n\n$RefreshReg$(_c, \"Chat\");","map":{"version":3,"names":["React","useEffect","useState","ScrollToBottom","Swal","withReactContent","PHeaders","GHeaders","useNavigate","Chat","socket","username","room","MySwal","navigate","allPHeaders","myHeaders","allGHeaders","miHeaders","currentMessage","setCurrentMessage","messageList","setMessageList","titlex","setTitlex","messageMap","queryString","window","location","search","urlParams","URLSearchParams","concernID","get","headers","isMounted","fetch","process","env","REACT_APP_SHASHA_URL","then","res","aToken","localStorage","setItem","json","result","message","reload","map","item","fdy","id","author","senderName","time","Date","createdTime","getHours","now","getMinutes","push","sendMessage","messageData","length","emit","list","data11","JSON","parse","getItem","orgIDs","orgID","personalIDs","personalID","raw","stringify","senderID","requestOptions","method","body","redirect","catch","error","fire","title","status","type","text","ids","on","data","console","log","overflow","textOverflow","width","whiteSpace","messageContent","event","target","value","key"],"sources":["C:/Users/ABIOYE DANIEL/Desktop/PlutospaceMono/src/layouts/mattersArising/viewMatter/chats.js"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport ScrollToBottom from \"react-scroll-to-bottom\";\r\nimport Swal from \"sweetalert2\";\r\nimport withReactContent from \"sweetalert2-react-content\";\r\n\r\nimport PHeaders from \"postHeader\";\r\nimport GHeaders from \"getHeader\";\r\n\r\nimport { useNavigate } from \"react-router-dom\";\r\n\r\n// import Footer from \"examples/Footer\";\r\n// import DashboardLayout from \"examples/LayoutContainers/DashboardLayout\";\r\n// import DashboardNavbar from \"examples/Navbars/DashboardNavbar\";\r\n// import MDBox from \"components/MDBox\";\r\n// import Card from \"@mui/material/Card\";\r\n// import MDButton from \"components/MDButton\";\r\n\r\n// import { Container } from \"react-bootstrap\";\r\n// import Emojis from \"./emoji\";\r\n\r\n// eslint-disable-next-line react/prop-types\r\nfunction Chat({ socket, username, room }) {\r\n  const MySwal = withReactContent(Swal);\r\n\r\n  const navigate = useNavigate();\r\n\r\n  // const { emoticons: allEmojis } = Emojis();\r\n\r\n  const { allPHeaders: myHeaders } = PHeaders();\r\n  const { allGHeaders: miHeaders } = GHeaders();\r\n\r\n  const [currentMessage, setCurrentMessage] = useState(\"\");\r\n  const [messageList, setMessageList] = useState([]);\r\n\r\n  const [titlex, setTitlex] = useState(\"\");\r\n\r\n  useEffect(() => {\r\n    const messageMap = [];\r\n\r\n    const queryString = window.location.search;\r\n    const urlParams = new URLSearchParams(queryString);\r\n    const concernID = urlParams.get(\"room\");\r\n\r\n    const headers = miHeaders;\r\n    let isMounted = true;\r\n    fetch(`${process.env.REACT_APP_SHASHA_URL}/concernChat/getForConcern/${concernID}`, { headers })\r\n      .then(async (res) => {\r\n        const aToken = res.headers.get(\"token-1\");\r\n        localStorage.setItem(\"rexxdex\", aToken);\r\n        return res.json();\r\n      })\r\n      .then((result) => {\r\n        if (result.message === \"Expired Access\") {\r\n          navigate(\"/authentication/sign-in\");\r\n          window.location.reload();\r\n        }\r\n        if (result.message === \"Token Does Not Exist\") {\r\n          navigate(\"/authentication/sign-in\");\r\n          window.location.reload();\r\n        }\r\n        if (result.message === \"Unauthorized Access\") {\r\n          navigate(\"/authentication/forbiddenPage\");\r\n          window.location.reload();\r\n        }\r\n        if (isMounted) {\r\n          // eslint-disable-next-line array-callback-return\r\n          result.map((item) => {\r\n            const fdy = {\r\n              id: item.id,\r\n              room: concernID,\r\n              author: item.senderName,\r\n              message: item.message,\r\n              time: `${new Date(item.createdTime).getHours()}:${new Date(Date.now()).getMinutes()}`,\r\n            };\r\n            messageMap.push(fdy);\r\n          });\r\n          setMessageList(messageMap);\r\n        }\r\n      });\r\n    return () => {\r\n      isMounted = false;\r\n    };\r\n  }, []);\r\n\r\n  const sendMessage = async () => {\r\n    if (currentMessage !== \"\") {\r\n      const messageData = {\r\n        id: messageList.length + 1,\r\n        room,\r\n        author: username,\r\n        message: currentMessage,\r\n        time: `${new Date(Date.now()).getHours()}:${new Date(Date.now()).getMinutes()}`,\r\n      };\r\n\r\n      // eslint-disable-next-line react/prop-types\r\n      await socket.emit(\"send_message\", messageData);\r\n      setMessageList((list) => [...list, messageData]);\r\n      setCurrentMessage(\"\");\r\n\r\n      const data11 = JSON.parse(localStorage.getItem(\"user1\"));\r\n      const orgIDs = data11.orgID;\r\n      const personalIDs = data11.personalID;\r\n\r\n      const raw = JSON.stringify({\r\n        orgID: orgIDs,\r\n        concernID: room,\r\n        message: currentMessage,\r\n        senderID: personalIDs,\r\n      });\r\n      const requestOptions = {\r\n        method: \"POST\",\r\n        headers: myHeaders,\r\n        body: raw,\r\n        redirect: \"follow\",\r\n      };\r\n      fetch(`${process.env.REACT_APP_SHASHA_URL}/concernChat/save`, requestOptions)\r\n        .then(async (res) => {\r\n          const aToken = res.headers.get(\"token-1\");\r\n          localStorage.setItem(\"rexxdex\", aToken);\r\n          return res.json();\r\n        })\r\n        .then((result) => {\r\n          if (result.message === \"Expired Access\") {\r\n            navigate(\"/authentication/sign-in\");\r\n            window.location.reload();\r\n          }\r\n          if (result.message === \"Token Does Not Exist\") {\r\n            navigate(\"/authentication/sign-in\");\r\n            window.location.reload();\r\n          }\r\n          if (result.message === \"Unauthorized Access\") {\r\n            navigate(\"/authentication/forbiddenPage\");\r\n            window.location.reload();\r\n          }\r\n        })\r\n        .catch((error) => {\r\n          MySwal.fire({\r\n            title: error.status,\r\n            type: \"error\",\r\n            text: error.message,\r\n          });\r\n        });\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    const headers = miHeaders;\r\n\r\n    const queryString = window.location.search;\r\n    const urlParams = new URLSearchParams(queryString);\r\n    const ids = urlParams.get(\"room\");\r\n\r\n    let isMounted = true;\r\n    fetch(`${process.env.REACT_APP_SHASHA_URL}/concern/getByIds/${ids}`, {\r\n      headers,\r\n    })\r\n      .then(async (res) => {\r\n        const aToken = res.headers.get(\"token-1\");\r\n        localStorage.setItem(\"rexxdex\", aToken);\r\n        return res.json();\r\n      })\r\n      .then((result) => {\r\n        if (result.message === \"Expired Access\") {\r\n          navigate(\"/authentication/sign-in\");\r\n          window.location.reload();\r\n        }\r\n        if (result.message === \"Token Does Not Exist\") {\r\n          navigate(\"/authentication/sign-in\");\r\n          window.location.reload();\r\n        }\r\n        if (result.message === \"Unauthorized Access\") {\r\n          navigate(\"/authentication/forbiddenPage\");\r\n          window.location.reload();\r\n        }\r\n        if (isMounted) {\r\n          setTitlex(result[0].title);\r\n        }\r\n      });\r\n    return () => {\r\n      isMounted = false;\r\n    };\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    let isMounted = true;\r\n    // eslint-disable-next-line react/prop-types\r\n    socket.on(\"receive_message\", (data) => {\r\n      if (isMounted) {\r\n        setMessageList((list) => [...list, data]);\r\n        console.log(data);\r\n      }\r\n    });\r\n    return () => {\r\n      isMounted = false;\r\n    };\r\n  }, [socket]);\r\n\r\n  return (\r\n    <>\r\n      <div className=\"chat-window\">\r\n        <div className=\"chat-header\">\r\n          <div\r\n            style={{\r\n              overflow: \"hidden\",\r\n              textOverflow: \"ellipsis\",\r\n              width: \"30rem\",\r\n              whiteSpace: \"nowrap\",\r\n            }}\r\n          >\r\n            <p>{titlex}</p>\r\n          </div>\r\n        </div>\r\n        <div className=\"chat-body\">\r\n          <ScrollToBottom className=\"message-container\">\r\n            {messageList.map((messageContent) => (\r\n              <div\r\n                className=\"message\"\r\n                id={username === messageContent.author ? \"other\" : \"you\"}\r\n                key={messageContent.id}\r\n              >\r\n                <div>\r\n                  <div className=\"message-content\">\r\n                    <p>{messageContent.message}</p>\r\n                  </div>\r\n                  <div className=\"message-meta\">\r\n                    <p id=\"time\">{messageContent.time}</p>\r\n                    <p id=\"author\">{messageContent.author}</p>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            ))}\r\n          </ScrollToBottom>\r\n        </div>\r\n        <div className=\"chat-footer\">\r\n          <input\r\n            type=\"text\"\r\n            value={currentMessage}\r\n            placeholder=\"Type Message...\"\r\n            onChange={(event) => {\r\n              setCurrentMessage(event.target.value);\r\n            }}\r\n            onKeyPress={(event) => {\r\n              // eslint-disable-next-line no-unused-expressions\r\n              event.key === \"Enter\" && sendMessage();\r\n            }}\r\n          />\r\n          <button type=\"button\" onClick={sendMessage}>\r\n            send\r\n          </button>\r\n        </div>\r\n        {/* <ScrollToBottom className=\"emoji-container\">\r\n          <Container>\r\n            <div className=\"row\">\r\n              {allEmojis.map((apis) => (\r\n                <div key={apis.emoji} value={apis.emoji} className=\"col-sm-1\">\r\n                  <button type=\"button\">{apis.emoji}</button>\r\n                </div>\r\n              ))}\r\n            </div>\r\n          </Container>\r\n        </ScrollToBottom> */}\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default Chat;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}