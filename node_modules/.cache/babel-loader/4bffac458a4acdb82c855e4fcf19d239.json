{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\HP\\\\PlutospaceMono\\\\src\\\\layouts\\\\salaryPayment\\\\salaryTime\\\\data\\\\salaryTimeTable.js\",\n    _s = $RefreshSig$();\n\n// Soft UI Dashboard React components\nimport { useEffect, useState } from \"react\";\nimport { Dropdown } from \"react-bootstrap\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport Icon from \"@mui/material/Icon\";\nimport Swal from \"sweetalert2\";\nimport withReactContent from \"sweetalert2-react-content\";\nimport PHeaders from \"postHeader\";\nimport GHeaders from \"getHeader\";\nimport { useNavigate } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function SalaryTimeData() {\n  _s();\n\n  const MySwal = withReactContent(Swal);\n  const [items, setItems] = useState([]);\n  const {\n    allPHeaders: myHeaders\n  } = PHeaders();\n  const {\n    allGHeaders: miHeaders\n  } = GHeaders();\n  const navigate = useNavigate(); // Method to handle update\n\n  const handleUpdate = (idx, timex, createdTimex, deleteFlagx) => {\n    const data11 = JSON.parse(localStorage.getItem(\"user1\"));\n    const orgIDs = data11.orgID;\n    const raw = JSON.stringify({\n      id: idx,\n      orgID: orgIDs,\n      payTime: timex,\n      createdTime: createdTimex,\n      deleteFlag: deleteFlagx\n    });\n    const requestOptions = {\n      method: \"POST\",\n      headers: myHeaders,\n      body: raw,\n      redirect: \"follow\"\n    };\n    fetch(`${process.env.REACT_APP_TANTA_URL}/remunerationTime/update`, requestOptions).then(async res => {\n      const aToken = res.headers.get(\"token-1\");\n      localStorage.setItem(\"rexxdex\", aToken);\n      return res.json();\n    }).then(result => {\n      if (result.message === \"Expired Access\") {\n        navigate(\"/authentication/sign-in\");\n        window.location.reload();\n      }\n\n      if (result.message === \"Token Does Not Exist\") {\n        navigate(\"/authentication/sign-in\");\n        window.location.reload();\n      }\n\n      if (result.message === \"Unauthorized Access\") {\n        navigate(\"/authentication/forbiddenPage\");\n        window.location.reload();\n      }\n\n      MySwal.fire({\n        title: result.status,\n        type: \"success\",\n        text: result.message\n      }).then(() => {\n        window.location.reload();\n      });\n    }).catch(error => {\n      MySwal.fire({\n        title: error.status,\n        type: \"error\",\n        text: error.message\n      });\n    });\n  }; // Method to filter departments\n\n\n  const handleShow = (filteredData, value) => {\n    let timex = \"\";\n    let createdTime = 0;\n    let deleteFlag = 0; // Avoid filter for empty string\n\n    if (!value) {\n      timex = \"\";\n      createdTime = 0;\n      deleteFlag = 0;\n    } else {\n      const filteredItems = filteredData.filter(item => item.id === value);\n      timex = filteredItems[0].payTime;\n      createdTime = filteredItems[0].createdTime;\n      deleteFlag = filteredItems[0].deleteFlag;\n    }\n\n    const changeDateandTime = timestamp => {\n      const date = new Date(timestamp);\n      let month = \"0\";\n\n      if (date.getMonth() + 1 < 10) {\n        const mymonth = date.getMonth() + 1;\n        month += mymonth;\n      } else {\n        const mymonth = date.getMonth() + 1;\n        month = mymonth;\n      }\n\n      let day = \"0\";\n\n      if (date.getDate() < 10) {\n        day += date.getDate();\n      } else {\n        day = date.getDate();\n      }\n\n      const retDate = `${date.getFullYear()}-${month}-${day}`;\n      let hour = \"0\";\n      let minutes = \"0\";\n\n      if (date.getHours() < 10) {\n        hour += date.getHours();\n      } else {\n        hour = date.getHours();\n      }\n\n      if (date.getMinutes() < 10) {\n        minutes += date.getMinutes();\n      } else {\n        minutes = date.getMinutes();\n      }\n\n      return `${retDate}T${hour}:${minutes}`;\n    };\n\n    const changeTime = changeDateandTime(timex);\n    MySwal.fire({\n      title: \"Update Department\",\n      html: `<table><tr><td>\n      <label for=\"name\">Time</label></td>\n      <td><input type=\"datetime-local\" class=\"swal2-input\" id=\"timexx\" value=\"${changeTime}\"></td></tr>`,\n      confirmButtonText: \"Save\",\n      showCancelButton: true,\n      confirmButtonColor: \"#3085d6\",\n      cancelButtonColor: \"#d33\",\n      preConfirm: () => {\n        const timee = Swal.getPopup().querySelector(\"#timexx\").value;\n        const conTime = new Date(timee).getTime();\n        const id = value;\n\n        if (!timee) {\n          Swal.showValidationMessage(`Please Select Date and Time`);\n        }\n\n        handleUpdate(id, conTime, createdTime, deleteFlag);\n      }\n    });\n  }; // Method to handle diable\n\n\n  const handleDisable = value => {\n    MySwal.fire({\n      title: \"Are you sure?\",\n      text: \"You won't be able to revert this!\",\n      icon: \"warning\",\n      showCancelButton: true,\n      confirmButtonColor: \"#3085d6\",\n      cancelButtonColor: \"#d33\",\n      confirmButtonText: \"Yes, delete it!\"\n    }).then(result => {\n      if (result.isConfirmed) {\n        const requestOptions = {\n          method: \"DELETE\",\n          headers: miHeaders\n        };\n        fetch(`${process.env.REACT_APP_TANTA_URL}/remunerationTime/delete/${value}`, requestOptions).then(async res => {\n          const aToken = res.headers.get(\"token-1\");\n          localStorage.setItem(\"rexxdex\", aToken);\n          return res.json();\n        }).then(resx => {\n          if (resx.message === \"Expired Access\") {\n            navigate(\"/authentication/sign-in\");\n          }\n\n          if (resx.message === \"Token Does Not Exist\") {\n            navigate(\"/authentication/sign-in\");\n          }\n\n          if (resx.message === \"Unauthorized Access\") {\n            navigate(\"/authentication/forbiddenPage\");\n          }\n\n          MySwal.fire({\n            title: resx.status,\n            type: \"success\",\n            text: resx.message\n          }).then(() => {\n            window.location.reload();\n          });\n        }).catch(error => {\n          MySwal.fire({\n            title: error.status,\n            type: \"error\",\n            text: error.message\n          });\n        });\n      }\n    });\n  }; // Method to change date from timestamp\n\n\n  const changeDate = timestamp => {\n    const date = new Date(timestamp);\n    const retDate = date.toDateString();\n    return retDate;\n  };\n\n  const changeDateandTime = timestamp => {\n    const date = new Date(timestamp);\n    const retDate = date.toDateString();\n    let hour = \"0\";\n    let minutes = \"0\";\n    let seconds = \"0\";\n\n    if (date.getHours() < 10) {\n      hour += date.getHours();\n    } else {\n      hour = date.getHours();\n    }\n\n    if (date.getMinutes() < 10) {\n      minutes += date.getMinutes();\n    } else {\n      minutes = date.getMinutes();\n    }\n\n    if (date.getSeconds() < 10) {\n      seconds += date.getSeconds();\n    } else {\n      seconds = date.getSeconds();\n    }\n\n    return `${retDate} ${hour}:${minutes}:${seconds}`;\n  }; // Method to change type\n  // eslint-disable-next-line consistent-return\n\n\n  const changeStat = status => {\n    if (status === 0) {\n      return \"Created\"; // eslint-disable-next-line no-else-return\n    } else if (status === 1) {\n      return \"Completed\"; // eslint-disable-next-line no-else-return\n    }\n  }; // Method to fetch all departments\n  // env.environments\n\n\n  useEffect(() => {\n    const headers = miHeaders;\n    const data11 = JSON.parse(localStorage.getItem(\"user1\"));\n    const orgIDs = data11.orgID;\n    let isMounted = true;\n    fetch(`${process.env.REACT_APP_TANTA_URL}/remunerationTime/gets/${orgIDs}`, {\n      headers\n    }).then(async res => {\n      const aToken = res.headers.get(\"token-1\");\n      localStorage.setItem(\"rexxdex\", aToken);\n      return res.json();\n    }).then(result => {\n      if (result.message === \"Expired Access\") {\n        navigate(\"/authentication/sign-in\");\n        window.location.reload();\n      }\n\n      if (result.message === \"Token Does Not Exist\") {\n        navigate(\"/authentication/sign-in\");\n        window.location.reload();\n      }\n\n      if (result.message === \"Unauthorized Access\") {\n        navigate(\"/authentication/forbiddenPage\");\n        window.location.reload();\n      }\n\n      if (isMounted) {\n        setItems(result);\n      }\n    });\n    return () => {\n      isMounted = false;\n    };\n  }, []); // Return table\n\n  return {\n    columns: [{\n      Header: \"Payment Time\",\n      accessor: \"payTime\",\n      Cell: _ref => {\n        let {\n          cell: {\n            value\n          }\n        } = _ref;\n        return changeDateandTime(value);\n      },\n      align: \"left\"\n    }, {\n      Header: \"Status\",\n      accessor: \"status\",\n      Cell: _ref2 => {\n        let {\n          cell: {\n            value\n          }\n        } = _ref2;\n        return changeStat(value);\n      },\n      align: \"left\"\n    }, {\n      Header: \"Date Created\",\n      accessor: \"createdTime\",\n      Cell: _ref3 => {\n        let {\n          cell: {\n            value\n          }\n        } = _ref3;\n        return changeDate(value);\n      },\n      align: \"left\"\n    }, {\n      Header: \"actions\",\n      accessor: \"id\",\n      // eslint-disable-next-line react/prop-types\n      Cell: _ref4 => {\n        let {\n          cell: {\n            value\n          }\n        } = _ref4;\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            width: \"100%\",\n            backgroundColor: \"#dadada\",\n            borderRadius: \"2px\"\n          },\n          children: /*#__PURE__*/_jsxDEV(Dropdown, {\n            children: [/*#__PURE__*/_jsxDEV(Dropdown.Toggle, {\n              variant: \"secondary\",\n              id: \"dropdown-basic\",\n              children: /*#__PURE__*/_jsxDEV(Icon, {\n                sx: {\n                  fontWeight: \"light\"\n                },\n                children: \"settings\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 318,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 317,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Dropdown.Menu, {\n              children: [/*#__PURE__*/_jsxDEV(Dropdown.Item, {\n                onClick: () => handleShow(items, value),\n                children: \"Update\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 322,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(Dropdown.Item, {\n                onClick: () => handleDisable(value),\n                children: \"Disable\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 323,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 321,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 316,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 309,\n          columnNumber: 11\n        }, this);\n      },\n      align: \"left\"\n    }],\n    rows: items\n  };\n}\n\n_s(SalaryTimeData, \"K4zs12HydVpcriwJbXPqsjCjNz0=\", false, function () {\n  return [useNavigate];\n});\n\n_c = SalaryTimeData;\n\nvar _c;\n\n$RefreshReg$(_c, \"SalaryTimeData\");","map":{"version":3,"names":["useEffect","useState","Dropdown","Icon","Swal","withReactContent","PHeaders","GHeaders","useNavigate","SalaryTimeData","MySwal","items","setItems","allPHeaders","myHeaders","allGHeaders","miHeaders","navigate","handleUpdate","idx","timex","createdTimex","deleteFlagx","data11","JSON","parse","localStorage","getItem","orgIDs","orgID","raw","stringify","id","payTime","createdTime","deleteFlag","requestOptions","method","headers","body","redirect","fetch","process","env","REACT_APP_TANTA_URL","then","res","aToken","get","setItem","json","result","message","window","location","reload","fire","title","status","type","text","catch","error","handleShow","filteredData","value","filteredItems","filter","item","changeDateandTime","timestamp","date","Date","month","getMonth","mymonth","day","getDate","retDate","getFullYear","hour","minutes","getHours","getMinutes","changeTime","html","confirmButtonText","showCancelButton","confirmButtonColor","cancelButtonColor","preConfirm","timee","getPopup","querySelector","conTime","getTime","showValidationMessage","handleDisable","icon","isConfirmed","resx","changeDate","toDateString","seconds","getSeconds","changeStat","isMounted","columns","Header","accessor","Cell","cell","align","width","backgroundColor","borderRadius","fontWeight","rows"],"sources":["C:/Users/HP/PlutospaceMono/src/layouts/salaryPayment/salaryTime/data/salaryTimeTable.js"],"sourcesContent":["// Soft UI Dashboard React components\r\nimport { useEffect, useState } from \"react\";\r\nimport { Dropdown } from \"react-bootstrap\";\r\nimport \"bootstrap/dist/css/bootstrap.min.css\";\r\nimport Icon from \"@mui/material/Icon\";\r\nimport Swal from \"sweetalert2\";\r\nimport withReactContent from \"sweetalert2-react-content\";\r\nimport PHeaders from \"postHeader\";\r\nimport GHeaders from \"getHeader\";\r\nimport { useNavigate } from \"react-router-dom\";\r\n\r\nexport default function SalaryTimeData() {\r\n  const MySwal = withReactContent(Swal);\r\n  const [items, setItems] = useState([]);\r\n\r\n  const { allPHeaders: myHeaders } = PHeaders();\r\n  const { allGHeaders: miHeaders } = GHeaders();\r\n\r\n  const navigate = useNavigate();\r\n  // Method to handle update\r\n  const handleUpdate = (idx, timex, createdTimex, deleteFlagx) => {\r\n    const data11 = JSON.parse(localStorage.getItem(\"user1\"));\r\n\r\n    const orgIDs = data11.orgID;\r\n    const raw = JSON.stringify({\r\n      id: idx,\r\n      orgID: orgIDs,\r\n      payTime: timex,\r\n      createdTime: createdTimex,\r\n      deleteFlag: deleteFlagx,\r\n    });\r\n    const requestOptions = {\r\n      method: \"POST\",\r\n      headers: myHeaders,\r\n      body: raw,\r\n      redirect: \"follow\",\r\n    };\r\n\r\n    fetch(`${process.env.REACT_APP_TANTA_URL}/remunerationTime/update`, requestOptions)\r\n      .then(async (res) => {\r\n        const aToken = res.headers.get(\"token-1\");\r\n        localStorage.setItem(\"rexxdex\", aToken);\r\n        return res.json();\r\n      })\r\n      .then((result) => {\r\n        if (result.message === \"Expired Access\") {\r\n          navigate(\"/authentication/sign-in\");\r\n          window.location.reload();\r\n        }\r\n        if (result.message === \"Token Does Not Exist\") {\r\n          navigate(\"/authentication/sign-in\");\r\n          window.location.reload();\r\n        }\r\n        if (result.message === \"Unauthorized Access\") {\r\n          navigate(\"/authentication/forbiddenPage\");\r\n          window.location.reload();\r\n        }\r\n        MySwal.fire({\r\n          title: result.status,\r\n          type: \"success\",\r\n          text: result.message,\r\n        }).then(() => {\r\n          window.location.reload();\r\n        });\r\n      })\r\n      .catch((error) => {\r\n        MySwal.fire({\r\n          title: error.status,\r\n          type: \"error\",\r\n          text: error.message,\r\n        });\r\n      });\r\n  };\r\n\r\n  // Method to filter departments\r\n  const handleShow = (filteredData, value) => {\r\n    let timex = \"\";\r\n    let createdTime = 0;\r\n    let deleteFlag = 0;\r\n    // Avoid filter for empty string\r\n    if (!value) {\r\n      timex = \"\";\r\n      createdTime = 0;\r\n      deleteFlag = 0;\r\n    } else {\r\n      const filteredItems = filteredData.filter((item) => item.id === value);\r\n\r\n      timex = filteredItems[0].payTime;\r\n      createdTime = filteredItems[0].createdTime;\r\n      deleteFlag = filteredItems[0].deleteFlag;\r\n    }\r\n    const changeDateandTime = (timestamp) => {\r\n      const date = new Date(timestamp);\r\n      let month = \"0\";\r\n      if (date.getMonth() + 1 < 10) {\r\n        const mymonth = date.getMonth() + 1;\r\n        month += mymonth;\r\n      } else {\r\n        const mymonth = date.getMonth() + 1;\r\n        month = mymonth;\r\n      }\r\n      let day = \"0\";\r\n      if (date.getDate() < 10) {\r\n        day += date.getDate();\r\n      } else {\r\n        day = date.getDate();\r\n      }\r\n      const retDate = `${date.getFullYear()}-${month}-${day}`;\r\n\r\n      let hour = \"0\";\r\n      let minutes = \"0\";\r\n\r\n      if (date.getHours() < 10) {\r\n        hour += date.getHours();\r\n      } else {\r\n        hour = date.getHours();\r\n      }\r\n\r\n      if (date.getMinutes() < 10) {\r\n        minutes += date.getMinutes();\r\n      } else {\r\n        minutes = date.getMinutes();\r\n      }\r\n\r\n      return `${retDate}T${hour}:${minutes}`;\r\n    };\r\n    const changeTime = changeDateandTime(timex);\r\n    MySwal.fire({\r\n      title: \"Update Department\",\r\n      html: `<table><tr><td>\r\n      <label for=\"name\">Time</label></td>\r\n      <td><input type=\"datetime-local\" class=\"swal2-input\" id=\"timexx\" value=\"${changeTime}\"></td></tr>`,\r\n      confirmButtonText: \"Save\",\r\n      showCancelButton: true,\r\n      confirmButtonColor: \"#3085d6\",\r\n      cancelButtonColor: \"#d33\",\r\n      preConfirm: () => {\r\n        const timee = Swal.getPopup().querySelector(\"#timexx\").value;\r\n        const conTime = new Date(timee).getTime();\r\n        const id = value;\r\n        if (!timee) {\r\n          Swal.showValidationMessage(`Please Select Date and Time`);\r\n        }\r\n        handleUpdate(id, conTime, createdTime, deleteFlag);\r\n      },\r\n    });\r\n  };\r\n\r\n  // Method to handle diable\r\n  const handleDisable = (value) => {\r\n    MySwal.fire({\r\n      title: \"Are you sure?\",\r\n      text: \"You won't be able to revert this!\",\r\n      icon: \"warning\",\r\n      showCancelButton: true,\r\n      confirmButtonColor: \"#3085d6\",\r\n      cancelButtonColor: \"#d33\",\r\n      confirmButtonText: \"Yes, delete it!\",\r\n    }).then((result) => {\r\n      if (result.isConfirmed) {\r\n        const requestOptions = {\r\n          method: \"DELETE\",\r\n          headers: miHeaders,\r\n        };\r\n\r\n        fetch(`${process.env.REACT_APP_TANTA_URL}/remunerationTime/delete/${value}`, requestOptions)\r\n          .then(async (res) => {\r\n            const aToken = res.headers.get(\"token-1\");\r\n            localStorage.setItem(\"rexxdex\", aToken);\r\n            return res.json();\r\n          })\r\n          .then((resx) => {\r\n            if (resx.message === \"Expired Access\") {\r\n              navigate(\"/authentication/sign-in\");\r\n            }\r\n            if (resx.message === \"Token Does Not Exist\") {\r\n              navigate(\"/authentication/sign-in\");\r\n            }\r\n            if (resx.message === \"Unauthorized Access\") {\r\n              navigate(\"/authentication/forbiddenPage\");\r\n            }\r\n            MySwal.fire({\r\n              title: resx.status,\r\n              type: \"success\",\r\n              text: resx.message,\r\n            }).then(() => {\r\n              window.location.reload();\r\n            });\r\n          })\r\n          .catch((error) => {\r\n            MySwal.fire({\r\n              title: error.status,\r\n              type: \"error\",\r\n              text: error.message,\r\n            });\r\n          });\r\n      }\r\n    });\r\n  };\r\n\r\n  // Method to change date from timestamp\r\n  const changeDate = (timestamp) => {\r\n    const date = new Date(timestamp);\r\n    const retDate = date.toDateString();\r\n    return retDate;\r\n  };\r\n\r\n  const changeDateandTime = (timestamp) => {\r\n    const date = new Date(timestamp);\r\n    const retDate = date.toDateString();\r\n    let hour = \"0\";\r\n    let minutes = \"0\";\r\n    let seconds = \"0\";\r\n\r\n    if (date.getHours() < 10) {\r\n      hour += date.getHours();\r\n    } else {\r\n      hour = date.getHours();\r\n    }\r\n\r\n    if (date.getMinutes() < 10) {\r\n      minutes += date.getMinutes();\r\n    } else {\r\n      minutes = date.getMinutes();\r\n    }\r\n\r\n    if (date.getSeconds() < 10) {\r\n      seconds += date.getSeconds();\r\n    } else {\r\n      seconds = date.getSeconds();\r\n    }\r\n    return `${retDate} ${hour}:${minutes}:${seconds}`;\r\n  };\r\n\r\n  // Method to change type\r\n  // eslint-disable-next-line consistent-return\r\n  const changeStat = (status) => {\r\n    if (status === 0) {\r\n      return \"Created\";\r\n      // eslint-disable-next-line no-else-return\r\n    } else if (status === 1) {\r\n      return \"Completed\";\r\n      // eslint-disable-next-line no-else-return\r\n    }\r\n  };\r\n\r\n  // Method to fetch all departments\r\n  // env.environments\r\n  useEffect(() => {\r\n    const headers = miHeaders;\r\n    const data11 = JSON.parse(localStorage.getItem(\"user1\"));\r\n\r\n    const orgIDs = data11.orgID;\r\n    let isMounted = true;\r\n    fetch(`${process.env.REACT_APP_TANTA_URL}/remunerationTime/gets/${orgIDs}`, { headers })\r\n      .then(async (res) => {\r\n        const aToken = res.headers.get(\"token-1\");\r\n        localStorage.setItem(\"rexxdex\", aToken);\r\n        return res.json();\r\n      })\r\n      .then((result) => {\r\n        if (result.message === \"Expired Access\") {\r\n          navigate(\"/authentication/sign-in\");\r\n          window.location.reload();\r\n        }\r\n        if (result.message === \"Token Does Not Exist\") {\r\n          navigate(\"/authentication/sign-in\");\r\n          window.location.reload();\r\n        }\r\n        if (result.message === \"Unauthorized Access\") {\r\n          navigate(\"/authentication/forbiddenPage\");\r\n          window.location.reload();\r\n        }\r\n        if (isMounted) {\r\n          setItems(result);\r\n        }\r\n      });\r\n    return () => {\r\n      isMounted = false;\r\n    };\r\n  }, []);\r\n\r\n  // Return table\r\n  return {\r\n    columns: [\r\n      {\r\n        Header: \"Payment Time\",\r\n        accessor: \"payTime\",\r\n        Cell: ({ cell: { value } }) => changeDateandTime(value),\r\n        align: \"left\",\r\n      },\r\n      {\r\n        Header: \"Status\",\r\n        accessor: \"status\",\r\n        Cell: ({ cell: { value } }) => changeStat(value),\r\n        align: \"left\",\r\n      },\r\n      {\r\n        Header: \"Date Created\",\r\n        accessor: \"createdTime\",\r\n        Cell: ({ cell: { value } }) => changeDate(value),\r\n        align: \"left\",\r\n      },\r\n      {\r\n        Header: \"actions\",\r\n        accessor: \"id\",\r\n        // eslint-disable-next-line react/prop-types\r\n        Cell: ({ cell: { value } }) => (\r\n          <div\r\n            style={{\r\n              width: \"100%\",\r\n              backgroundColor: \"#dadada\",\r\n              borderRadius: \"2px\",\r\n            }}\r\n          >\r\n            <Dropdown>\r\n              <Dropdown.Toggle variant=\"secondary\" id=\"dropdown-basic\">\r\n                <Icon sx={{ fontWeight: \"light\" }}>settings</Icon>\r\n              </Dropdown.Toggle>\r\n\r\n              <Dropdown.Menu>\r\n                <Dropdown.Item onClick={() => handleShow(items, value)}>Update</Dropdown.Item>\r\n                <Dropdown.Item onClick={() => handleDisable(value)}>Disable</Dropdown.Item>\r\n              </Dropdown.Menu>\r\n            </Dropdown>\r\n          </div>\r\n        ),\r\n        align: \"left\",\r\n      },\r\n    ],\r\n\r\n    rows: items,\r\n  };\r\n}\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}