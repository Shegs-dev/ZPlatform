{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\HP\\\\PlutospaceMono\\\\src\\\\layouts\\\\timeofftype\\\\data\\\\timeofftype.js\",\n    _s = $RefreshSig$();\n\n/* eslint-disable react/prop-types */\n// @mui material components\n// Soft UI Dashboard React components\nimport { useEffect, useState } from \"react\";\nimport { Dropdown } from \"react-bootstrap\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport Icon from \"@mui/material/Icon\";\nimport Swal from \"sweetalert2\";\nimport withReactContent from \"sweetalert2-react-content\";\nimport PHeaders from \"postHeader\";\nimport GHeaders from \"getHeader\";\nimport { useNavigate } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function data() {\n  _s();\n\n  const MySwal = withReactContent(Swal);\n  const [items, setItems] = useState([]);\n  const {\n    allPHeaders: myHeaders\n  } = PHeaders();\n  const {\n    allGHeaders: miHeaders\n  } = GHeaders();\n  const navigate = useNavigate(); // Method to handle diable\n\n  const handleUpdate = (idx, namex, descripx, typex, createdTimex, deleteFlagx) => {\n    const data11 = JSON.parse(localStorage.getItem(\"user1\"));\n    const orgIDs = data11.orgID;\n    const raw = JSON.stringify({\n      id: idx,\n      orgID: orgIDs,\n      name: namex,\n      descrip: descripx,\n      type: typex,\n      createdTime: createdTimex,\n      deleteFlag: deleteFlagx\n    });\n    const requestOptions = {\n      method: \"POST\",\n      headers: myHeaders,\n      body: raw,\n      redirect: \"follow\"\n    };\n    fetch(`${process.env.REACT_APP_NSUTANA_URL}/timeofftype/update`, requestOptions).then(async res => {\n      const aToken = res.headers.get(\"token-1\");\n      localStorage.setItem(\"rexxdex\", aToken);\n      return res.json();\n    }).then(result => {\n      if (result.message === \"Expired Access\") {\n        navigate(\"/authentication/sign-in\");\n        window.location.reload();\n      }\n\n      if (result.message === \"Token Does Not Exist\") {\n        navigate(\"/authentication/sign-in\");\n        window.location.reload();\n      }\n\n      if (result.message === \"Unauthorized Access\") {\n        navigate(\"/authentication/forbiddenPage\");\n        window.location.reload();\n      }\n\n      MySwal.fire({\n        title: result.status,\n        type: \"success\",\n        text: result.message\n      }).then(() => {\n        window.location.reload();\n      });\n    }).catch(error => {\n      MySwal.fire({\n        title: error.status,\n        type: \"error\",\n        text: error.message\n      });\n    });\n  }; // Method to filter departments\n\n\n  const handleShow = (filteredData, value) => {\n    let namex = \"\";\n    let descripx = \"\";\n    let typex = 0;\n    let createdTimex = 0;\n    let deleteFlagx = 0; // Avoid filter for empty string\n\n    if (!value) {\n      namex = \"\";\n      descripx = \"\";\n      typex = 0;\n      createdTimex = 0;\n      deleteFlagx = 0;\n    } else {\n      const filteredItems = filteredData.filter(item => item.id === value);\n      namex = filteredItems[0].name;\n      descripx = filteredItems[0].descrip;\n      typex = filteredItems[0].type;\n      createdTimex = filteredItems[0].createdTime;\n      deleteFlagx = filteredItems[0].deleteFlag;\n    }\n\n    MySwal.fire({\n      title: \"Update Time off-type\",\n      html: `<table><tr><td>\n      <label for=\"name\">Name</label></td>\n      <td><input type=\"text\" id=\"name\" value=\"${namex}\" class=\"swal2-input\" placeholder=\"Name\"></td></tr><br>\n      <tr><td><label for=\"descrip\">Description</label></td>\n      <td><input type=\"text\" class=\"swal2-input\" id=\"descrip\" value=\"${descripx}\" placeholder=\"Description\"></td></tr>\n      <tr><td><label for=\"type\">Type</label></td>\n              <td><input type=\"text\" class=\"swal2-input\" id=\"Annually\" value=\"Annually\" disabled placeholder=\"Type\">\n      </td></tr></table>`,\n      confirmButtonText: \"Save\",\n      showCancelButton: true,\n      confirmButtonColor: \"#3085d6\",\n      cancelButtonColor: \"#d33\",\n      preConfirm: () => {\n        const name = Swal.getPopup().querySelector(\"#name\").value;\n        const descrip = Swal.getPopup().querySelector(\"#descrip\").value;\n        const type = typex;\n        const id = value;\n        const letters = /^[a-zA-Z ]+$/;\n\n        if (name.length > 0 && !name.match(letters)) {\n          Swal.showValidationMessage(`Name - Please write a name and use only letters`);\n        } else {\n          handleUpdate(id, name, descrip, type, deleteFlagx, createdTimex);\n        }\n      }\n    });\n  }; // Method to handle diable\n\n\n  const handleDisable = id => {\n    MySwal.fire({\n      title: \"Are you sure?\",\n      text: \"You won't be able to revert this!\",\n      icon: \"warning\",\n      showCancelButton: true,\n      confirmButtonColor: \"#3085d6\",\n      cancelButtonColor: \"#d33\",\n      confirmButtonText: \"Yes, delete it!\"\n    }).then(result => {\n      if (result.isConfirmed) {\n        const requestOptions = {\n          method: \"DELETE\",\n          headers: miHeaders\n        };\n        fetch(`${process.env.REACT_APP_NSUTANA_URL}/timeofftype/delete/${id}`, requestOptions).then(res => res.json()).then(resx => {\n          if (resx.message === \"Expired Access\") {\n            navigate(\"/authentication/sign-in\");\n          }\n\n          if (resx.message === \"Token Does Not Exist\") {\n            navigate(\"/authentication/sign-in\");\n          }\n\n          if (resx.message === \"Unauthorized Access\") {\n            navigate(\"/authentication/forbiddenPage\");\n          }\n\n          MySwal.fire({\n            title: resx.status,\n            type: \"success\",\n            text: resx.message\n          }).then(() => {\n            window.location.reload();\n          });\n        }).catch(error => {\n          MySwal.fire({\n            title: error.status,\n            type: \"error\",\n            text: error.message\n          });\n        });\n      }\n    });\n  }; // Method to change type\n\n\n  const changeType = type => {\n    if (type === 1) {\n      return \"Monthly\";\n    }\n\n    return \"Annually\";\n  }; // Method to fetch all timeofftype\n\n\n  useEffect(() => {\n    const headers = miHeaders;\n    const data11 = JSON.parse(localStorage.getItem(\"user1\"));\n    const orgIDs = data11.orgID;\n    let isMounted = true;\n    fetch(`${process.env.REACT_APP_NSUTANA_URL}/timeofftype/getAll/${orgIDs}`, {\n      headers\n    }).then(async res => {\n      const aToken = res.headers.get(\"token-1\");\n      localStorage.setItem(\"rexxdex\", aToken);\n      return res.json();\n    }).then(result => {\n      if (result.message === \"Expired Access\") {\n        navigate(\"/authentication/sign-in\");\n        window.location.reload();\n      }\n\n      if (result.message === \"Token Does Not Exist\") {\n        navigate(\"/authentication/sign-in\");\n        window.location.reload();\n      }\n\n      if (result.message === \"Unauthorized Access\") {\n        navigate(\"/authentication/forbiddenPage\");\n        window.location.reload();\n      }\n\n      if (isMounted) {\n        setItems(result);\n      }\n    });\n    return () => {\n      isMounted = false;\n    };\n  }, []);\n\n  const handleAddToTimeOff = value => {\n    navigate(`/timeoff-type/add-Details-To-Time-Off-Type?id=${value}`);\n  }; // Method to handle diable\n\n\n  const handleSource = SourceId => {\n    MySwal.fire({\n      title: \"Clone Time-Off Type\",\n      text: \"You won't be able to revert this!\",\n      icon: \"warning\",\n      html: `<div align=\"center\"><table><tr><td>\n          <label for=\"name\">Clone Name</label></td>\n          <td><input type=\"text\" id=\"soName\" class=\"swal2-input\" placeholder=\"Name\"></td></tr></table></div>`,\n      confirmButtonText: \"Clone\",\n      showCancelButton: true,\n      confirmButtonColor: \"#3085d6\",\n      cancelButtonColor: \"#d33\"\n    }).then(resultD => {\n      if (resultD.isConfirmed) {\n        const sourceName = document.getElementById(\"soName\").value;\n        const headers = miHeaders;\n        fetch(`${process.env.REACT_APP_NSUTANA_URL}/timeofftype/clone/${SourceId}/${sourceName}`, {\n          headers\n        }).then(async res => {\n          const aToken = res.headers.get(\"token-1\");\n          localStorage.setItem(\"rexxdex\", aToken);\n          return res.json();\n        }).then(resx => {\n          if (resx.message === \"Expired Access\") {\n            navigate(\"/authentication/sign-in\");\n          }\n\n          if (resx.message === \"Token Does Not Exist\") {\n            navigate(\"/authentication/sign-in\");\n          }\n\n          if (resx.message === \"Unauthorized Access\") {\n            navigate(\"/authentication/forbiddenPage\");\n          }\n\n          MySwal.fire({\n            title: resx.status,\n            type: \"success\",\n            text: resx.message\n          }).then(() => {\n            window.location.reload();\n          });\n        }).catch(error => {\n          MySwal.fire({\n            title: error.status,\n            type: \"error\",\n            text: error.message\n          });\n        });\n      }\n    });\n  }; // Return table\n\n\n  return {\n    columns: [{\n      Header: \"name\",\n      accessor: \"name\",\n      align: \"left\"\n    }, {\n      Header: \"description\",\n      accessor: \"descrip\",\n      align: \"left\"\n    }, {\n      Header: \"type\",\n      accessor: \"type\",\n      Cell: _ref => {\n        let {\n          cell: {\n            value\n          }\n        } = _ref;\n        return changeType(value);\n      },\n      align: \"left\"\n    }, {\n      Header: \"actions\",\n      accessor: \"id\",\n      Cell: _ref2 => {\n        let {\n          cell: {\n            value\n          }\n        } = _ref2;\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            width: \"100%\",\n            backgroundColor: \"#f5f5f5\",\n            borderRadius: \"2px\"\n          },\n          children: /*#__PURE__*/_jsxDEV(Dropdown, {\n            children: [/*#__PURE__*/_jsxDEV(Dropdown.Toggle, {\n              variant: \"secondary\",\n              id: \"dropdown-basic\",\n              children: /*#__PURE__*/_jsxDEV(Icon, {\n                sx: {\n                  fontWeight: \"light\"\n                },\n                children: \"settings\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 308,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 307,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Dropdown.Menu, {\n              children: [/*#__PURE__*/_jsxDEV(Dropdown.Item, {\n                onClick: () => handleShow(items, value),\n                children: \"Update\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 312,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(Dropdown.Item, {\n                onClick: () => handleDisable(value),\n                children: \"Disable\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 313,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(Dropdown.Item, {\n                onClick: () => handleAddToTimeOff(value),\n                children: \"Add Details\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 314,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(Dropdown.Item, {\n                onClick: () => handleSource(value),\n                children: \"Clone\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 315,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 311,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 306,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 299,\n          columnNumber: 11\n        }, this);\n      },\n      align: \"left\"\n    }],\n    rows: items\n  };\n}\n\n_s(data, \"K4zs12HydVpcriwJbXPqsjCjNz0=\", false, function () {\n  return [useNavigate];\n});","map":{"version":3,"names":["useEffect","useState","Dropdown","Icon","Swal","withReactContent","PHeaders","GHeaders","useNavigate","data","MySwal","items","setItems","allPHeaders","myHeaders","allGHeaders","miHeaders","navigate","handleUpdate","idx","namex","descripx","typex","createdTimex","deleteFlagx","data11","JSON","parse","localStorage","getItem","orgIDs","orgID","raw","stringify","id","name","descrip","type","createdTime","deleteFlag","requestOptions","method","headers","body","redirect","fetch","process","env","REACT_APP_NSUTANA_URL","then","res","aToken","get","setItem","json","result","message","window","location","reload","fire","title","status","text","catch","error","handleShow","filteredData","value","filteredItems","filter","item","html","confirmButtonText","showCancelButton","confirmButtonColor","cancelButtonColor","preConfirm","getPopup","querySelector","letters","length","match","showValidationMessage","handleDisable","icon","isConfirmed","resx","changeType","isMounted","handleAddToTimeOff","handleSource","SourceId","resultD","sourceName","document","getElementById","columns","Header","accessor","align","Cell","cell","width","backgroundColor","borderRadius","fontWeight","rows"],"sources":["C:/Users/HP/PlutospaceMono/src/layouts/timeofftype/data/timeofftype.js"],"sourcesContent":["/* eslint-disable react/prop-types */\r\n\r\n// @mui material components\r\n\r\n// Soft UI Dashboard React components\r\nimport { useEffect, useState } from \"react\";\r\nimport { Dropdown } from \"react-bootstrap\";\r\nimport \"bootstrap/dist/css/bootstrap.min.css\";\r\nimport Icon from \"@mui/material/Icon\";\r\nimport Swal from \"sweetalert2\";\r\nimport withReactContent from \"sweetalert2-react-content\";\r\nimport PHeaders from \"postHeader\";\r\nimport GHeaders from \"getHeader\";\r\nimport { useNavigate } from \"react-router-dom\";\r\n\r\nexport default function data() {\r\n  const MySwal = withReactContent(Swal);\r\n  const [items, setItems] = useState([]);\r\n\r\n  const { allPHeaders: myHeaders } = PHeaders();\r\n  const { allGHeaders: miHeaders } = GHeaders();\r\n\r\n  const navigate = useNavigate();\r\n\r\n  // Method to handle diable\r\n  const handleUpdate = (idx, namex, descripx, typex, createdTimex, deleteFlagx) => {\r\n    const data11 = JSON.parse(localStorage.getItem(\"user1\"));\r\n\r\n    const orgIDs = data11.orgID;\r\n    const raw = JSON.stringify({\r\n      id: idx,\r\n      orgID: orgIDs,\r\n      name: namex,\r\n      descrip: descripx,\r\n      type: typex,\r\n      createdTime: createdTimex,\r\n      deleteFlag: deleteFlagx,\r\n    });\r\n    const requestOptions = {\r\n      method: \"POST\",\r\n      headers: myHeaders,\r\n      body: raw,\r\n      redirect: \"follow\",\r\n    };\r\n\r\n    fetch(`${process.env.REACT_APP_NSUTANA_URL}/timeofftype/update`, requestOptions)\r\n      .then(async (res) => {\r\n        const aToken = res.headers.get(\"token-1\");\r\n        localStorage.setItem(\"rexxdex\", aToken);\r\n        return res.json();\r\n      })\r\n      .then((result) => {\r\n        if (result.message === \"Expired Access\") {\r\n          navigate(\"/authentication/sign-in\");\r\n          window.location.reload();\r\n        }\r\n        if (result.message === \"Token Does Not Exist\") {\r\n          navigate(\"/authentication/sign-in\");\r\n          window.location.reload();\r\n        }\r\n        if (result.message === \"Unauthorized Access\") {\r\n          navigate(\"/authentication/forbiddenPage\");\r\n          window.location.reload();\r\n        }\r\n        MySwal.fire({\r\n          title: result.status,\r\n          type: \"success\",\r\n          text: result.message,\r\n        }).then(() => {\r\n          window.location.reload();\r\n        });\r\n      })\r\n      .catch((error) => {\r\n        MySwal.fire({\r\n          title: error.status,\r\n          type: \"error\",\r\n          text: error.message,\r\n        });\r\n      });\r\n  };\r\n\r\n  // Method to filter departments\r\n  const handleShow = (filteredData, value) => {\r\n    let namex = \"\";\r\n    let descripx = \"\";\r\n    let typex = 0;\r\n    let createdTimex = 0;\r\n    let deleteFlagx = 0;\r\n    // Avoid filter for empty string\r\n    if (!value) {\r\n      namex = \"\";\r\n      descripx = \"\";\r\n      typex = 0;\r\n      createdTimex = 0;\r\n      deleteFlagx = 0;\r\n    } else {\r\n      const filteredItems = filteredData.filter((item) => item.id === value);\r\n\r\n      namex = filteredItems[0].name;\r\n      descripx = filteredItems[0].descrip;\r\n      typex = filteredItems[0].type;\r\n      createdTimex = filteredItems[0].createdTime;\r\n      deleteFlagx = filteredItems[0].deleteFlag;\r\n    }\r\n\r\n    MySwal.fire({\r\n      title: \"Update Time off-type\",\r\n      html: `<table><tr><td>\r\n      <label for=\"name\">Name</label></td>\r\n      <td><input type=\"text\" id=\"name\" value=\"${namex}\" class=\"swal2-input\" placeholder=\"Name\"></td></tr><br>\r\n      <tr><td><label for=\"descrip\">Description</label></td>\r\n      <td><input type=\"text\" class=\"swal2-input\" id=\"descrip\" value=\"${descripx}\" placeholder=\"Description\"></td></tr>\r\n      <tr><td><label for=\"type\">Type</label></td>\r\n              <td><input type=\"text\" class=\"swal2-input\" id=\"Annually\" value=\"Annually\" disabled placeholder=\"Type\">\r\n      </td></tr></table>`,\r\n      confirmButtonText: \"Save\",\r\n      showCancelButton: true,\r\n      confirmButtonColor: \"#3085d6\",\r\n      cancelButtonColor: \"#d33\",\r\n      preConfirm: () => {\r\n        const name = Swal.getPopup().querySelector(\"#name\").value;\r\n        const descrip = Swal.getPopup().querySelector(\"#descrip\").value;\r\n        const type = typex;\r\n        const id = value;\r\n        const letters = /^[a-zA-Z ]+$/;\r\n        if (name.length > 0 && !name.match(letters)) {\r\n          Swal.showValidationMessage(`Name - Please write a name and use only letters`);\r\n        } else {\r\n          handleUpdate(id, name, descrip, type, deleteFlagx, createdTimex);\r\n        }\r\n      },\r\n    });\r\n  };\r\n\r\n  // Method to handle diable\r\n  const handleDisable = (id) => {\r\n    MySwal.fire({\r\n      title: \"Are you sure?\",\r\n      text: \"You won't be able to revert this!\",\r\n      icon: \"warning\",\r\n      showCancelButton: true,\r\n      confirmButtonColor: \"#3085d6\",\r\n      cancelButtonColor: \"#d33\",\r\n      confirmButtonText: \"Yes, delete it!\",\r\n    }).then((result) => {\r\n      if (result.isConfirmed) {\r\n        const requestOptions = {\r\n          method: \"DELETE\",\r\n          headers: miHeaders,\r\n        };\r\n\r\n        fetch(`${process.env.REACT_APP_NSUTANA_URL}/timeofftype/delete/${id}`, requestOptions)\r\n          .then((res) => res.json())\r\n          .then((resx) => {\r\n            if (resx.message === \"Expired Access\") {\r\n              navigate(\"/authentication/sign-in\");\r\n            }\r\n            if (resx.message === \"Token Does Not Exist\") {\r\n              navigate(\"/authentication/sign-in\");\r\n            }\r\n            if (resx.message === \"Unauthorized Access\") {\r\n              navigate(\"/authentication/forbiddenPage\");\r\n            }\r\n            MySwal.fire({\r\n              title: resx.status,\r\n              type: \"success\",\r\n              text: resx.message,\r\n            }).then(() => {\r\n              window.location.reload();\r\n            });\r\n          })\r\n          .catch((error) => {\r\n            MySwal.fire({\r\n              title: error.status,\r\n              type: \"error\",\r\n              text: error.message,\r\n            });\r\n          });\r\n      }\r\n    });\r\n  };\r\n  // Method to change type\r\n  const changeType = (type) => {\r\n    if (type === 1) {\r\n      return \"Monthly\";\r\n    }\r\n    return \"Annually\";\r\n  };\r\n\r\n  // Method to fetch all timeofftype\r\n  useEffect(() => {\r\n    const headers = miHeaders;\r\n\r\n    const data11 = JSON.parse(localStorage.getItem(\"user1\"));\r\n\r\n    const orgIDs = data11.orgID;\r\n    let isMounted = true;\r\n    fetch(`${process.env.REACT_APP_NSUTANA_URL}/timeofftype/getAll/${orgIDs}`, { headers })\r\n      .then(async (res) => {\r\n        const aToken = res.headers.get(\"token-1\");\r\n        localStorage.setItem(\"rexxdex\", aToken);\r\n        return res.json();\r\n      })\r\n      .then((result) => {\r\n        if (result.message === \"Expired Access\") {\r\n          navigate(\"/authentication/sign-in\");\r\n          window.location.reload();\r\n        }\r\n        if (result.message === \"Token Does Not Exist\") {\r\n          navigate(\"/authentication/sign-in\");\r\n          window.location.reload();\r\n        }\r\n        if (result.message === \"Unauthorized Access\") {\r\n          navigate(\"/authentication/forbiddenPage\");\r\n          window.location.reload();\r\n        }\r\n        if (isMounted) {\r\n          setItems(result);\r\n        }\r\n      });\r\n    return () => {\r\n      isMounted = false;\r\n    };\r\n  }, []);\r\n\r\n  const handleAddToTimeOff = (value) => {\r\n    navigate(`/timeoff-type/add-Details-To-Time-Off-Type?id=${value}`);\r\n  };\r\n\r\n  // Method to handle diable\r\n  const handleSource = (SourceId) => {\r\n    MySwal.fire({\r\n      title: \"Clone Time-Off Type\",\r\n      text: \"You won't be able to revert this!\",\r\n      icon: \"warning\",\r\n      html: `<div align=\"center\"><table><tr><td>\r\n          <label for=\"name\">Clone Name</label></td>\r\n          <td><input type=\"text\" id=\"soName\" class=\"swal2-input\" placeholder=\"Name\"></td></tr></table></div>`,\r\n      confirmButtonText: \"Clone\",\r\n      showCancelButton: true,\r\n      confirmButtonColor: \"#3085d6\",\r\n      cancelButtonColor: \"#d33\",\r\n    }).then((resultD) => {\r\n      if (resultD.isConfirmed) {\r\n        const sourceName = document.getElementById(\"soName\").value;\r\n        const headers = miHeaders;\r\n        fetch(`${process.env.REACT_APP_NSUTANA_URL}/timeofftype/clone/${SourceId}/${sourceName}`, {\r\n          headers,\r\n        })\r\n          .then(async (res) => {\r\n            const aToken = res.headers.get(\"token-1\");\r\n            localStorage.setItem(\"rexxdex\", aToken);\r\n            return res.json();\r\n          })\r\n          .then((resx) => {\r\n            if (resx.message === \"Expired Access\") {\r\n              navigate(\"/authentication/sign-in\");\r\n            }\r\n            if (resx.message === \"Token Does Not Exist\") {\r\n              navigate(\"/authentication/sign-in\");\r\n            }\r\n            if (resx.message === \"Unauthorized Access\") {\r\n              navigate(\"/authentication/forbiddenPage\");\r\n            }\r\n            MySwal.fire({\r\n              title: resx.status,\r\n              type: \"success\",\r\n              text: resx.message,\r\n            }).then(() => {\r\n              window.location.reload();\r\n            });\r\n          })\r\n          .catch((error) => {\r\n            MySwal.fire({\r\n              title: error.status,\r\n              type: \"error\",\r\n              text: error.message,\r\n            });\r\n          });\r\n      }\r\n    });\r\n  };\r\n\r\n  // Return table\r\n  return {\r\n    columns: [\r\n      { Header: \"name\", accessor: \"name\", align: \"left\" },\r\n      { Header: \"description\", accessor: \"descrip\", align: \"left\" },\r\n      {\r\n        Header: \"type\",\r\n        accessor: \"type\",\r\n        Cell: ({ cell: { value } }) => changeType(value),\r\n        align: \"left\",\r\n      },\r\n      {\r\n        Header: \"actions\",\r\n        accessor: \"id\",\r\n        Cell: ({ cell: { value } }) => (\r\n          <div\r\n            style={{\r\n              width: \"100%\",\r\n              backgroundColor: \"#f5f5f5\",\r\n              borderRadius: \"2px\",\r\n            }}\r\n          >\r\n            <Dropdown>\r\n              <Dropdown.Toggle variant=\"secondary\" id=\"dropdown-basic\">\r\n                <Icon sx={{ fontWeight: \"light\" }}>settings</Icon>\r\n              </Dropdown.Toggle>\r\n\r\n              <Dropdown.Menu>\r\n                <Dropdown.Item onClick={() => handleShow(items, value)}>Update</Dropdown.Item>\r\n                <Dropdown.Item onClick={() => handleDisable(value)}>Disable</Dropdown.Item>\r\n                <Dropdown.Item onClick={() => handleAddToTimeOff(value)}>Add Details</Dropdown.Item>\r\n                <Dropdown.Item onClick={() => handleSource(value)}>Clone</Dropdown.Item>\r\n              </Dropdown.Menu>\r\n            </Dropdown>\r\n          </div>\r\n        ),\r\n        align: \"left\",\r\n      },\r\n    ],\r\n\r\n    rows: items,\r\n  };\r\n}\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}